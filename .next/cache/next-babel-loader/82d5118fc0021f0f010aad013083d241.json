{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { stringify } from \"querystring\";\nimport axios from \"services/_base/_axios\";\nimport produce from \"immer\";\n\nvar VesselServices = /*#__PURE__*/function () {\n  function VesselServices() {\n    _classCallCheck(this, VesselServices);\n  }\n\n  _createClass(VesselServices, [{\n    key: \"fetchAll\",\n    value: function () {\n      var _fetchAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(params) {\n        var response, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"/vessels?\".concat(stringify(params)));\n\n              case 2:\n                response = _context.sent;\n                data = {\n                  data: {\n                    data: response.data.data.map(function (record) {\n                      var attributes = produce(record.attributes, function (draft) {\n                        draft.properties = _objectSpread(_objectSpread({}, draft), draft.properties);\n                        delete draft.properties.geometry;\n                      });\n                      return attributes;\n                    })\n                  }\n                };\n                return _context.abrupt(\"return\", data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function fetchAll(_x) {\n        return _fetchAll.apply(this, arguments);\n      }\n\n      return fetchAll;\n    }()\n  }, {\n    key: \"simulate\",\n    value: function () {\n      var _simulate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(imo, params) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                axios.post(\"/spires?imos[]=\".concat(imo), params);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function simulate(_x2, _x3) {\n        return _simulate.apply(this, arguments);\n      }\n\n      return simulate;\n    }()\n  }]);\n\n  return VesselServices;\n}();\n\nexport default new VesselServices();","map":null,"metadata":{},"sourceType":"module"}
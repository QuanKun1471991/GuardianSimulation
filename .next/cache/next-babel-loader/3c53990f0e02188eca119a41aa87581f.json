{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\";\nimport VectorSource from \"ol/source/Vector\";\nimport { Icon, Text, Fill, Stroke, Style } from \"ol/style\";\nimport GeoJSON from \"ol/format/GeoJSON\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport LayerGroup from \"ol/layer/Group\";\nimport { getHeadingRad, MapLayers, formatVesselFeatures } from \"core/model/Map\";\nimport { get } from \"lodash\";\nimport produce from \"immer\";\nvar vesselLayerScaleZoomLevel = 5;\nvar labelLayerScaleZoomLevel = 3;\n\nvar getImageStyle = function getImageStyle() {\n  return new Icon({\n    src: \"/icons/com_icons.png\",\n    color: \"#0692d5\",\n    size: [56, 31],\n    offset: [3, 11],\n    scale: 1\n  });\n};\n\nvar textStyle = {\n  number: new Text({\n    textAlign: \"center\",\n    textBaseline: \"bottom\",\n    font: \"Bold 12px/3 arial\",\n    fill: new Fill(),\n    offsetY: -5\n  }),\n  name: new Text({\n    textAlign: \"center\",\n    textBaseline: \"bottom\",\n    font: \"Bold 15px/3 arial\",\n    fill: new Fill({\n      color: \"black\"\n    }),\n    backgroundFill: new Fill({\n      color: \"white\"\n    }),\n    backgroundStroke: new Stroke({\n      color: [63, 144, 255]\n    }),\n    padding: [0, 5, 0, 5],\n    offsetY: 38\n  })\n};\nvar vesselStyle = new Style({\n  text: textStyle.number,\n  image: getImageStyle()\n});\nvar labelStyle = new Style({\n  text: textStyle.name\n});\nvar vesselLayer = new VectorLayer({\n  source: new VectorSource({\n    format: new GeoJSON()\n  })\n});\nvar labelLayer = new VectorLayer({\n  source: new VectorSource({\n    format: new GeoJSON()\n  })\n});\nvar layer = new LayerGroup({\n  layers: [vesselLayer, labelLayer]\n});\n\nvar Index = function Index(_ref) {\n  _s();\n\n  var selectedVessel = _ref.selectedVessel,\n      vesselList = _ref.vesselList,\n      guardianMap = _ref.guardianMap;\n\n  var _useState = useState(guardianMap.getView().getZoom()),\n      currentZoom = _useState[0],\n      setCurrentZoom = _useState[1];\n\n  useEffect(function () {\n    if (vesselList.length === 0) {\n      return;\n    }\n\n    var dataFeatures = vesselList.map(function (vessel) {\n      return get(vessel, \"attributes\");\n    });\n    var vesselSource = vesselLayer.getSource();\n    var labelSource = labelLayer.getSource();\n    var vesselDataFeatures = selectedVessel ? dataFeatures.filter(function (_ref2) {\n      var id = _ref2.properties.id;\n      return id === get(selectedVessel, 'id');\n    }) : dataFeatures;\n    var labelDataFeatures = vesselDataFeatures.map(function (item) {\n      return produce(item, function (draft) {\n        draft.properties.click_disabled = true;\n      });\n    });\n    var vesselFeatures = formatVesselFeatures(vesselDataFeatures);\n    var labelFeatures = formatVesselFeatures(labelDataFeatures);\n    vesselSource.clear();\n    labelSource.clear();\n    vesselSource.addFeatures(vesselFeatures);\n    labelSource.addFeatures(labelFeatures); // eslint-disable-next-line consistent-return\n\n    return function clearUp() {\n      vesselSource.clear();\n      labelSource.clear();\n    };\n  }, [selectedVessel, vesselList]);\n\n  var reStylesVesselLayer = function reStylesVesselLayer() {\n    var source = vesselLayer.getSource();\n    var features = source.getFeatures();\n    features.map(function (feature) {\n      var zoom = guardianMap.getView().getZoom();\n      var type = feature.get(\"type\");\n      var imageStyle = getImageStyle();\n      var newVesselStyle = vesselStyle.clone();\n      newVesselStyle.setImage(imageStyle);\n      var image = newVesselStyle.getImage();\n      image.setScale(zoom > vesselLayerScaleZoomLevel ? 0.5 : 0.3);\n      var rotation = type === MapLayers.Vessel ? getHeadingRad(feature.get(\"heading\")) : 0;\n      image.setRotation(rotation);\n      return feature.setStyle(newVesselStyle);\n    });\n  };\n\n  var reStylesLabelLayer = function reStylesLabelLayer() {\n    var labelSource = labelLayer.getSource();\n    var features = labelSource.getFeatures();\n    features.map(function (feature) {\n      var zoom = guardianMap.getView().getZoom();\n      var scale = zoom > labelLayerScaleZoomLevel ? 0.32 : 0.3;\n      var newText = textStyle.name.clone();\n      var newLabelStyle = labelStyle.clone();\n      newLabelStyle.setText(newText);\n      var label = newLabelStyle.getText();\n      label.setText(feature.get(\"type\") !== \"port\" ? feature.get(\"vessel_name\") : \"\");\n      label.setScale(scale * 1.7);\n      newLabelStyle.setText(label);\n      feature.setStyle(newLabelStyle);\n    });\n  };\n\n  useEffect(function () {\n    reStylesVesselLayer();\n  }, [vesselList, guardianMap, reStylesVesselLayer]);\n  useEffect(function () {\n    reStylesLabelLayer();\n  }, [vesselList, guardianMap]);\n  guardianMap.on(\"moveend\", function () {\n    var zoom = guardianMap.getView().getZoom();\n\n    if (zoom > vesselLayerScaleZoomLevel && currentZoom < vesselLayerScaleZoomLevel || zoom < vesselLayerScaleZoomLevel && currentZoom > vesselLayerScaleZoomLevel) {\n      reStylesVesselLayer();\n    }\n\n    if (zoom > labelLayerScaleZoomLevel && currentZoom < labelLayerScaleZoomLevel || zoom < labelLayerScaleZoomLevel && currentZoom > labelLayerScaleZoomLevel) {\n      reStylesLabelLayer();\n    }\n\n    setCurrentZoom(zoom);\n  });\n  useEffect(function () {\n    guardianMap.addLayer(layer);\n  }, [guardianMap]);\n  return null;\n};\n\n_s(Index, \"r1kwB9c6ALWUEaX1Wv8Xn3swV78=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/tonysan/Desktop/guardian-simulation/GuardianSimulation/src/components/Layers/Vessel/index.tsx"],"names":["useEffect","useState","VectorSource","Icon","Text","Fill","Stroke","Style","GeoJSON","VectorLayer","LayerGroup","getHeadingRad","MapLayers","formatVesselFeatures","get","produce","vesselLayerScaleZoomLevel","labelLayerScaleZoomLevel","getImageStyle","src","color","size","offset","scale","textStyle","number","textAlign","textBaseline","font","fill","offsetY","name","backgroundFill","backgroundStroke","padding","vesselStyle","text","image","labelStyle","vesselLayer","source","format","labelLayer","layer","layers","Index","selectedVessel","vesselList","guardianMap","getView","getZoom","currentZoom","setCurrentZoom","length","dataFeatures","map","vessel","vesselSource","getSource","labelSource","vesselDataFeatures","filter","id","properties","labelDataFeatures","item","draft","click_disabled","vesselFeatures","labelFeatures","clear","addFeatures","clearUp","reStylesVesselLayer","features","getFeatures","feature","zoom","type","imageStyle","newVesselStyle","clone","setImage","getImage","setScale","rotation","Vessel","setRotation","setStyle","reStylesLabelLayer","newText","newLabelStyle","setText","label","getText","on","addLayer"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useMemo, useState } from \"react\"\nimport Map from \"ol/Map\"\nimport VectorSource from \"ol/source/Vector\"\nimport { Icon, Text, Fill, Stroke, Style } from \"ol/style\"\nimport GeoJSON from \"ol/format/GeoJSON\"\nimport VectorLayer from \"ol/layer/Vector\"\nimport LayerGroup from \"ol/layer/Group\"\nimport { getHeadingRad, MapLayers, formatVesselFeatures, FeaturesProfile } from \"core/model/Map\"\nimport { get } from \"lodash\"\nimport produce from \"immer\"\nimport { Feature } from \"ol\"\n\nconst vesselLayerScaleZoomLevel = 5\nconst labelLayerScaleZoomLevel = 3\n\nconst getImageStyle = () =>\n  new Icon({\n    src: \"/icons/com_icons.png\",\n    color: \"#0692d5\",\n    size: [56, 31],\n    offset: [3, 11],\n    scale: 1,\n  })\nconst textStyle = {\n  number: new Text({\n    textAlign: \"center\",\n    textBaseline: \"bottom\",\n    font: \"Bold 12px/3 arial\",\n    fill: new Fill(),\n    offsetY: -5,\n  }),\n  name: new Text({\n    textAlign: \"center\",\n    textBaseline: \"bottom\",\n    font: \"Bold 15px/3 arial\",\n    fill: new Fill({ color: \"black\" }),\n    backgroundFill: new Fill({ color: \"white\" }),\n    backgroundStroke: new Stroke({ color: [63, 144, 255] }),\n    padding: [0, 5, 0, 5],\n    offsetY: 38,\n  }),\n}\nconst vesselStyle = new Style({\n  text: textStyle.number,\n  image: getImageStyle(),\n})\nconst labelStyle = new Style({\n  text: textStyle.name,\n})\n\nconst vesselLayer = new VectorLayer({\n  source: new VectorSource({\n    format: new GeoJSON(),\n  }),\n})\n\nconst labelLayer = new VectorLayer({\n  source: new VectorSource({\n    format: new GeoJSON(),\n  }),\n})\nconst layer = new LayerGroup({\n  layers: [vesselLayer, labelLayer],\n})\n\ninterface VesselLayerProps {\n  guardianMap: Map\n  vesselList: []\n  selectedVessel: Feature\n}\n\nconst Index = ({ selectedVessel, vesselList, guardianMap }: VesselLayerProps) => {\n  const [currentZoom, setCurrentZoom] = useState(guardianMap.getView().getZoom())\n  useEffect(() => {\n    if (vesselList.length === 0) {\n      return\n    }\n\n    const dataFeatures = vesselList.map((vessel) => get(vessel, \"attributes\"))\n\n    const vesselSource = vesselLayer.getSource()\n    const labelSource = labelLayer.getSource()\n    const vesselDataFeatures = selectedVessel\n      ? dataFeatures.filter(({ properties: { id } }: any) => id === get(selectedVessel,'id'))\n      : dataFeatures\n\n    const labelDataFeatures = vesselDataFeatures.map((item: FeaturesProfile) =>\n      produce(item, (draft) => {\n        draft.properties.click_disabled = true\n      })\n    )\n\n    const vesselFeatures = formatVesselFeatures(vesselDataFeatures)\n    const labelFeatures = formatVesselFeatures(labelDataFeatures)\n\n    vesselSource.clear()\n    labelSource.clear()\n    vesselSource.addFeatures(vesselFeatures)\n    labelSource.addFeatures(labelFeatures)\n\n    // eslint-disable-next-line consistent-return\n    return function clearUp() {\n      vesselSource.clear()\n      labelSource.clear()\n    }\n  }, [selectedVessel, vesselList])\n\n  const reStylesVesselLayer = () => {\n    const source = vesselLayer.getSource()\n    const features = source.getFeatures()\n    features.map((feature) => {\n      const zoom = guardianMap.getView().getZoom()\n      const type = feature.get(\"type\")\n      const imageStyle = getImageStyle()\n      const newVesselStyle = vesselStyle.clone()\n      newVesselStyle.setImage(imageStyle)\n      const image = newVesselStyle.getImage()\n      image.setScale(zoom > vesselLayerScaleZoomLevel ? 0.5 : 0.3)\n      const rotation = type === MapLayers.Vessel ? getHeadingRad(feature.get(\"heading\")) : 0\n      image.setRotation(rotation)\n\n      return feature.setStyle(newVesselStyle)\n    })\n  }\n\n  const reStylesLabelLayer = () => {\n    const labelSource = labelLayer.getSource()\n    const features = labelSource.getFeatures()\n    features.map((feature) => {\n      const zoom = guardianMap.getView().getZoom()\n      const scale = zoom > labelLayerScaleZoomLevel ? 0.32 : 0.3\n      const newText = textStyle.name.clone()\n      const newLabelStyle = labelStyle.clone()\n      newLabelStyle.setText(newText)\n      const label = newLabelStyle.getText()\n\n      label.setText(feature.get(\"type\") !== \"port\" ? feature.get(\"vessel_name\") : \"\")\n      label.setScale(scale * 1.7)\n\n      newLabelStyle.setText(label)\n      feature.setStyle(newLabelStyle)\n    })\n  }\n\n  useEffect(() => {\n    reStylesVesselLayer()\n  }, [vesselList, guardianMap, reStylesVesselLayer])\n\n  useEffect(() => {\n    reStylesLabelLayer()\n  }, [vesselList, guardianMap])\n\n  guardianMap.on(\"moveend\", () => {\n    const zoom = guardianMap.getView().getZoom()\n    if (\n      (zoom > vesselLayerScaleZoomLevel && currentZoom < vesselLayerScaleZoomLevel) ||\n      (zoom < vesselLayerScaleZoomLevel && currentZoom > vesselLayerScaleZoomLevel)\n    ) {\n      reStylesVesselLayer()\n    }\n    if (\n      (zoom > labelLayerScaleZoomLevel && currentZoom < labelLayerScaleZoomLevel) ||\n      (zoom < labelLayerScaleZoomLevel && currentZoom > labelLayerScaleZoomLevel)\n    ) {\n      reStylesLabelLayer()\n    }\n    setCurrentZoom(zoom)\n  })\n\n  useEffect(() => {\n    guardianMap.addLayer(layer)\n  }, [guardianMap])\n\n  return null\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}
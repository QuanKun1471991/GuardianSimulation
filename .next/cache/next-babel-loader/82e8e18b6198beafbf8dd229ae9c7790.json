{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport function delay(_x) {\n  return _delay.apply(this, arguments);\n}\n\nfunction _delay() {\n  _delay = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(time) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new Promise(function (resolve) {\n              return setTimeout(resolve, time);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _delay.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}
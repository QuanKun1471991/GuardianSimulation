{"ast":null,"code":"/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\";\nimport VectorSource from \"ol/source/Vector\";\nimport { Icon, Text, Fill, Stroke, Style } from \"ol/style\";\nimport GeoJSON from \"ol/format/GeoJSON\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport LayerGroup from \"ol/layer/Group\";\nimport { formatVesselFeatures } from \"core/model/Map\";\nimport produce from \"immer\";\nvar vesselLayerScaleZoomLevel = 5;\nvar labelLayerScaleZoomLevel = 3;\n\nvar getImageStyle = function getImageStyle() {\n  return new Icon({\n    src: \"/icons/com_icons.png\",\n    color: \"#0692d5\",\n    size: [56, 31],\n    offset: [3, 11],\n    scale: 1\n  });\n};\n\nvar textStyle = {\n  number: new Text({\n    textAlign: \"center\",\n    textBaseline: \"bottom\",\n    font: \"Bold 12px/3 arial\",\n    fill: new Fill(),\n    offsetY: -5\n  }),\n  name: new Text({\n    textAlign: \"center\",\n    textBaseline: \"bottom\",\n    font: \"Bold 15px/3 arial\",\n    fill: new Fill({\n      color: \"black\"\n    }),\n    backgroundFill: new Fill({\n      color: \"white\"\n    }),\n    backgroundStroke: new Stroke({\n      color: [63, 144, 255]\n    }),\n    padding: [0, 5, 0, 5],\n    offsetY: 38\n  })\n};\nvar vesselStyle = new Style({\n  text: textStyle.number,\n  image: getImageStyle()\n});\nvar labelStyle = new Style({\n  text: textStyle.name\n});\nvar vesselLayer = new VectorLayer({\n  source: new VectorSource({\n    format: new GeoJSON()\n  })\n});\nvar labelLayer = new VectorLayer({\n  source: new VectorSource({\n    format: new GeoJSON()\n  })\n});\nvar layer = new LayerGroup({\n  layers: [vesselLayer, labelLayer]\n});\n\nvar Index = function Index(_ref) {\n  var selectedVessel = _ref.selectedVessel,\n      vesselList = _ref.vesselList,\n      guardianMap = _ref.guardianMap;\n\n  var _useState = useState(guardianMap.getView().getZoom()),\n      currentZoom = _useState[0],\n      setCurrentZoom = _useState[1];\n\n  useEffect(function () {\n    if (vesselList.length === 0) {\n      return;\n    }\n\n    var vesselSource = vesselLayer.getSource();\n    var labelSource = labelLayer.getSource();\n    var vesselDataFeatures = selectedVessel ? vesselList.filter(function (_ref2) {\n      var id = _ref2.properties.id;\n      return id === selectedVessel.get('id');\n    }) : vesselList;\n    var labelDataFeatures = vesselDataFeatures.map(function (item) {\n      return produce(item, function (draft) {\n        draft.properties.click_disabled = true;\n      });\n    });\n    var vesselFeatures = formatVesselFeatures(vesselDataFeatures);\n    var labelFeatures = formatVesselFeatures(labelDataFeatures);\n    vesselSource.clear();\n    labelSource.clear();\n    vesselSource.addFeatures(vesselFeatures);\n    labelSource.addFeatures(labelFeatures); // eslint-disable-next-line consistent-return\n\n    return function clearUp() {\n      vesselSource.clear();\n      labelSource.clear();\n    };\n  }, [selectedVessel, vesselList]);\n\n  var reStylesVesselLayer = function reStylesVesselLayer() {\n    var source = vesselLayer.getSource();\n    var features = source.getFeatures();\n    features.map(function (feature) {\n      var zoom = guardianMap.getView().getZoom();\n      var type = feature.get(\"type\");\n      var imageStyle = getImageStyle();\n      var newVesselStyle = vesselStyle.clone();\n      newVesselStyle.setImage(imageStyle);\n      var image = newVesselStyle.getImage();\n      image.setScale(zoom > vesselLayerScaleZoomLevel ? 0.5 : 0.3);\n      image.setRotation(feature.get(\"heading\"));\n      return feature.setStyle(newVesselStyle);\n    });\n  };\n\n  var reStylesLabelLayer = function reStylesLabelLayer() {\n    var labelSource = labelLayer.getSource();\n    var features = labelSource.getFeatures();\n    features.map(function (feature) {\n      var zoom = guardianMap.getView().getZoom();\n      var scale = zoom > labelLayerScaleZoomLevel ? 0.32 : 0.3;\n      var newText = textStyle.name.clone();\n      var newLabelStyle = labelStyle.clone();\n      newLabelStyle.setText(newText);\n      var label = newLabelStyle.getText();\n      label.setText(feature.get(\"name\"));\n      label.setScale(scale * 1.7);\n      newLabelStyle.setText(label);\n      feature.setStyle(newLabelStyle);\n    });\n  };\n\n  useEffect(function () {\n    reStylesVesselLayer();\n  }, [vesselList, guardianMap, reStylesVesselLayer]);\n  useEffect(function () {\n    reStylesLabelLayer();\n  }, [vesselList, guardianMap]);\n  guardianMap.on(\"moveend\", function () {\n    var zoom = guardianMap.getView().getZoom();\n\n    if (zoom > vesselLayerScaleZoomLevel && currentZoom < vesselLayerScaleZoomLevel || zoom < vesselLayerScaleZoomLevel && currentZoom > vesselLayerScaleZoomLevel) {\n      reStylesVesselLayer();\n    }\n\n    if (zoom > labelLayerScaleZoomLevel && currentZoom < labelLayerScaleZoomLevel || zoom < labelLayerScaleZoomLevel && currentZoom > labelLayerScaleZoomLevel) {\n      reStylesLabelLayer();\n    }\n\n    setCurrentZoom(zoom);\n  });\n  useEffect(function () {\n    guardianMap.addLayer(layer);\n  }, [guardianMap]);\n  return null;\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}
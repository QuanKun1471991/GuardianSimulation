{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { stringify } from \"querystring\";\nimport axios from \"services/_base/_axios\";\nimport produce from \"immer\";\n\nvar VesselServices = /*#__PURE__*/function () {\n  function VesselServices() {\n    _classCallCheck(this, VesselServices);\n  }\n\n  _createClass(VesselServices, [{\n    key: \"fetchAll\",\n    value: function () {\n      var _fetchAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(params) {\n        var response, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"/vessels?\".concat(stringify(params)));\n\n              case 2:\n                response = _context.sent;\n                data = {\n                  data: {\n                    data: response.data.data.map(function (record) {\n                      var attributes = produce(record.attributes, function (draft) {\n                        draft.properties = _objectSpread(_objectSpread({}, draft), draft.properties);\n                        delete draft.properties.geometry;\n                      });\n                      return attributes;\n                    })\n                  }\n                };\n                return _context.abrupt(\"return\", data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function fetchAll(_x) {\n        return _fetchAll.apply(this, arguments);\n      }\n\n      return fetchAll;\n    }()\n  }, {\n    key: \"simulate\",\n    value: function () {\n      var _simulate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref) {\n        var imo, params;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                imo = _ref.imo, params = _objectWithoutProperties(_ref, [\"imo\"]);\n                axios.post(\"/v1/spires?imos[]=\".concat(imo), params);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function simulate(_x2) {\n        return _simulate.apply(this, arguments);\n      }\n\n      return simulate;\n    }()\n  }]);\n\n  return VesselServices;\n}();\n\nexport default new VesselServices();","map":{"version":3,"sources":["/Users/tonysan/Desktop/guardian-simulation/GuardianSimulation/src/services/vessel/api.ts"],"names":["stringify","axios","produce","VesselServices","params","get","response","data","map","record","attributes","draft","properties","geometry","imo","post"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,OAAP,MAAoB,OAApB;;IAEMC,c;;;;;;;;gGACkBC,M;;;;;;;uBACIH,KAAK,CAACI,GAAN,oBAAsBL,SAAS,CAACI,MAAD,CAA/B,E;;;AAAlBE,gBAAAA,Q;AAEAC,gBAAAA,I,GAAO;AACXA,kBAAAA,IAAI,EAAE;AACJA,oBAAAA,IAAI,EAAED,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBC,GAAnB,CAAuB,UAACC,MAAD,EAAY;AACvC,0BAAMC,UAAU,GAAGR,OAAO,CAACO,MAAM,CAACC,UAAR,EAAoB,UAACC,KAAD,EAAW;AACvDA,wBAAAA,KAAK,CAACC,UAAN,mCAAwBD,KAAxB,GAAkCA,KAAK,CAACC,UAAxC;AACA,+BAAOD,KAAK,CAACC,UAAN,CAAiBC,QAAxB;AACD,uBAHyB,CAA1B;AAIA,6BAAOH,UAAP;AACD,qBANK;AADF;AADK,iB;iDAWNH,I;;;;;;;;;;;;;;;;;;;;;;;;;AAGeO,gBAAAA,G,QAAAA,G,EAAQV,M;AAC9BH,gBAAAA,KAAK,CAACc,IAAN,6BAAgCD,GAAhC,GAAuCV,MAAvC;;;;;;;;;;;;;;;;;;;;;AAIJ,eAAe,IAAID,cAAJ,EAAf","sourcesContent":["import { stringify } from \"querystring\"\nimport axios from \"services/_base/_axios\"\nimport produce from \"immer\"\n\nclass VesselServices {\n  public async fetchAll(params: Record<\"imos\", number>) {\n    const response =  await axios.get(`/vessels?${stringify(params)}`)\n    \n    const data = {\n      data: {\n        data: response.data.data.map((record) => {\n          const attributes = produce(record.attributes, (draft) => {\n            draft.properties = { ...draft, ...draft.properties }\n            delete draft.properties.geometry\n          })\n          return attributes\n        }),\n      },\n    }\n    return data\n  }\n\n  public async simulate({ imo, ...params }: any) {\n    axios.post(`/v1/spires?imos[]=${imo}`, params)\n  }\n}\n\nexport default new VesselServices()\n"]},"metadata":{},"sourceType":"module"}
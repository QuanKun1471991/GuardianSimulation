{"ast":null,"code":"export var forEach = function forEach(e, iterate) {\n  var keys = Object.keys(e);\n  return keys.forEach(function (k, i) {\n    return iterate({\n      key: k,\n      value: e[k]\n    }, i);\n  });\n};","map":{"version":3,"sources":["/Users/tonysan/Desktop/guardian-simulation/GuardianSimulation/src/core/utils/enum.ts"],"names":["forEach","e","iterate","keys","Object","k","i","key","value"],"mappings":"AAEA,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAAIC,CAAJ,EAAqCC,OAArC,EAA6D;AAClF,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,CAAZ,CAAb;AACA,SAAOE,IAAI,CAACH,OAAL,CAAa,UAACK,CAAD,EAAIC,CAAJ;AAAA,WAAUJ,OAAO,CAAC;AAAEK,MAAAA,GAAG,EAAEF,CAAP;AAAUG,MAAAA,KAAK,EAAEP,CAAC,CAACI,CAAD;AAAlB,KAAD,EAA0BC,CAA1B,CAAjB;AAAA,GAAb,CAAP;AACD,CAHM","sourcesContent":["type Ilerate<T> = ({ key, value }: { key: keyof T; value: T[keyof T] }, index: number) => void\n\nexport const forEach = <T>(e: { [key in keyof T]: T[key] }, iterate: Ilerate<T>) => {\n  const keys = Object.keys(e) as Array<keyof T>\n  return keys.forEach((k, i) => iterate({ key: k, value: e[k] }, i))\n}\n"]},"metadata":{},"sourceType":"module"}
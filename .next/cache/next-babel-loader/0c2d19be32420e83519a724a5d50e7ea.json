{"ast":null,"code":"import { forEach } from \"core/utils/enum\";\nconst ACTIONS = {\n  SET_STATE: \"set state\",\n  RESET_STATE: \"reset state\"\n};\nvar ActionFunctionName;\n\n(function (ActionFunctionName) {\n  ActionFunctionName[\"SET_STATE\"] = \"setState\";\n  ActionFunctionName[\"RESET_STATE\"] = \"resetState\";\n})(ActionFunctionName || (ActionFunctionName = {}));\n\nconst genActions = prefix => {\n  const funcs = {};\n  const types = {};\n  forEach(ActionFunctionName, ({\n    key,\n    value\n  }) => {\n    const hasKey = Reflect.has(funcs, value);\n\n    if (!hasKey) {\n      const dispatchType = `${prefix} ${ACTIONS[key]}`;\n      types[key] = dispatchType;\n\n      funcs[value] = payload => ({\n        type: dispatchType,\n        payload\n      });\n    }\n  });\n  return {\n    funcs,\n    types\n  };\n};\n\nexport default genActions;","map":null,"metadata":{},"sourceType":"module"}
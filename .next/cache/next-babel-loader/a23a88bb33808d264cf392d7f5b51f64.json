{"ast":null,"code":"export var VesselActions;\n\n(function (VesselActions) {\n  VesselActions[\"FETCH_ALL\"] = \"[vessel] fetch all\";\n  VesselActions[\"FETCH_ALL_SUCCESS\"] = \"[vessel] fetch all success\";\n  VesselActions[\"FETCH_ALL_FAILED\"] = \"[vessel] fetch all failed\";\n})(VesselActions || (VesselActions = {}));","map":{"version":3,"sources":["/Users/tonysan/Desktop/guardian-simulation/GuardianSimulation/src/services/vessel/types.ts"],"names":["VesselActions"],"mappings":"AAWA,WAAYA,aAAZ;;WAAYA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;GAAAA,a,KAAAA,a","sourcesContent":["export interface IVesselState {\n  loading: boolean\n  error: string | null\n  data: []\n  meta: Record<string, unknown>\n  total: string\n  next_page: number\n  per_page: string\n  selectedVessel: Record<string, unknown>\n}\n\nexport enum VesselActions {\n  FETCH_ALL = \"[vessel] fetch all\",\n  FETCH_ALL_SUCCESS = \"[vessel] fetch all success\",\n  FETCH_ALL_FAILED = \"[vessel] fetch all failed\",\n}\n\nexport interface IFetchAllSuccessAction {\n  type: VesselActions.FETCH_ALL_SUCCESS\n}\n\nexport interface IFetchAllFailedAction {\n  type: VesselActions.FETCH_ALL_FAILED\n  payload: { error: string }\n}\n\nexport interface IFetchAllAction {\n  type: VesselActions.FETCH_ALL\n  payload: {\n    onStart: () => void\n    onSuccess: () => void\n    onError: (e) => void\n    params: Record<\"imos\", number>\n  }\n}\n\nexport type VesselActionTypes = IFetchAllSuccessAction | IFetchAllFailedAction | IFetchAllAction\n"]},"metadata":{},"sourceType":"module"}
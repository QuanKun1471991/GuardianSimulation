{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { combineReducers } from \"redux\";\nimport auth from \"./auth/reducers\";\nimport vessel from \"./vessel/reducers\";\nimport port from \"./port/reducers\";\nimport layout from \"./layout/reducers\";\nexport default function createReducer(injectedReducers = {}) {\n  const rootReducer = combineReducers(_objectSpread({\n    auth,\n    vessel,\n    port,\n    layout\n  }, injectedReducers));\n  return rootReducer;\n}","map":{"version":3,"sources":["/Users/tonysan/Desktop/guardian-simulation/GuardianSimulation/src/services/reducers.ts"],"names":["combineReducers","auth","vessel","port","layout","createReducer","injectedReducers","rootReducer"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,eAAe,SAASC,aAAT,CAAuBC,gBAAgB,GAAG,EAA1C,EAA8C;AAC3D,QAAMC,WAAW,GAAGP,eAAe;AACjCC,IAAAA,IADiC;AAEjCC,IAAAA,MAFiC;AAGjCC,IAAAA,IAHiC;AAIjCC,IAAAA;AAJiC,KAK9BE,gBAL8B,EAAnC;AAQA,SAAOC,WAAP;AACD","sourcesContent":["import { combineReducers } from \"redux\"\nimport auth from \"./auth/reducers\"\nimport vessel from \"./vessel/reducers\"\nimport port from \"./port/reducers\"\nimport layout from \"./layout/reducers\"\n\nexport default function createReducer(injectedReducers = {}) {\n  const rootReducer = combineReducers({\n    auth,\n    vessel,\n    port,\n    layout,\n    ...injectedReducers,\n  })\n\n  return rootReducer\n}\n"]},"metadata":{},"sourceType":"module"}
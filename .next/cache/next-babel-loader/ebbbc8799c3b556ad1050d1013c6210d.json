{"ast":null,"code":"import produce from \"immer\";\nimport genReducers from \"services/_base/reducers\";\nimport { BaseActions } from \"./actions\";\nimport { VesselActions } from \"./types\";\nexport var initialState = {\n  loading: false,\n  error: \"\",\n  data: [],\n  total: \"\",\n  next_page: 1,\n  per_page: \"\",\n  meta: {},\n  selectedVessel: {\n    id: null,\n    name: null,\n    imo: null,\n    mmsi: null,\n    simulationRoutes: {\n      show: false,\n      data: [],\n      loading: false,\n      update: false,\n      error: null\n    }\n  }\n};\n\nvar vesselReducer = function vesselReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case VesselActions.FETCH_ALL:\n        {\n          draft.error = null;\n          draft.loading = true;\n          return draft;\n        }\n\n      case VesselActions.FETCH_ALL_SUCCESS:\n        {\n          draft.loading = false;\n          return draft;\n        }\n\n      case VesselActions.FETCH_ALL_FAILED:\n        {\n          var error = action.payload.error;\n          draft.loading = false;\n          draft.error = error;\n          return draft;\n        }\n\n      default:\n        return genReducers(initialState, BaseActions)(state, action);\n    }\n  });\n};\n\nexport default vesselReducer;","map":null,"metadata":{},"sourceType":"module"}
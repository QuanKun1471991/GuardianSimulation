{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport LayersClearIcon from '@material-ui/icons/LayersClear';\nimport SendIcon from '@material-ui/icons/Send';\n\nconst styles = theme => {\n  return {\n    root: {\n      position: 'fixed',\n      top: 100,\n      right: 0\n    }\n  };\n};\n\nconst useStyles = makeStyles(styles);\n\nfunction Index(_ref) {\n  let {\n    showSimulationRoutes,\n    handleClickClearDraw,\n    handleClickClearDrawLayer,\n    handleClickSend,\n    show\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"showSimulationRoutes\", \"handleClickClearDraw\", \"handleClickClearDrawLayer\", \"handleClickSend\", \"show\"]);\n\n  const classes = useStyles();\n  return __jsx(React.Fragment, null, show && __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"div\", {\n    onClick: handleClickClearDraw\n  }, __jsx(IconButton, {\n    color: \"secondary\"\n  }, __jsx(ClearIcon, {\n    color: \"action\"\n  }))), __jsx(\"div\", {\n    onClick: handleClickClearDrawLayer\n  }, __jsx(IconButton, {\n    color: \"secondary\"\n  }, __jsx(LayersClearIcon, {\n    color: \"action\"\n  }))), __jsx(\"div\", {\n    onClick: handleClickSend\n  }, __jsx(IconButton, {\n    color: \"secondary\"\n  }, __jsx(SendIcon, {\n    color: \"action\"\n  })))));\n}\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}
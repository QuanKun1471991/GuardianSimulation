{"ast":null,"code":"import \"antd/lib/layout/style\";\nimport _Layout from \"antd/lib/layout\";\nimport \"antd/lib/menu/style\";\nimport _Menu from \"antd/lib/menu\";\n\nvar _jsxFileName = \"/Users/tonysan/Desktop/guardian-simulation/GuardianSimulation/src/layouts/Sider/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { ROUTES } from \"core/constants/routes\";\nimport { useRouter } from \"next/router\";\nimport React, { memo, useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nfunction SideBar(_ref) {\n  _s();\n\n  var _this = this;\n\n  var collapsed = _ref.collapsed,\n      onBreakPoint = _ref.onBreakPoint;\n  var router = useRouter();\n  var dispatch = useDispatch();\n  var routes = useMemo(function () {\n    var routesMap = ROUTES.map(function (_ref2) {\n      var Icon = _ref2.icon,\n          path = _ref2.path,\n          name = _ref2.name;\n      return __jsx(_Menu.Item, {\n        key: path,\n        onClick: function onClick() {\n          return router.push(path);\n        },\n        icon: __jsx(Icon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 69\n          }\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      }, name);\n    });\n    return routesMap;\n  }, [router, dispatch]);\n  var selectedRoute = useMemo(function () {\n    var matchedRoute = ROUTES.find(function (_ref3) {\n      var path = _ref3.path;\n\n      if (path === \"/\") {\n        return router.pathname === path;\n      }\n\n      return router.pathname.includes(path);\n    });\n    return matchedRoute === null || matchedRoute === void 0 ? void 0 : matchedRoute.path;\n  }, [router.pathname]);\n  return __jsx(_Layout.Sider, {\n    trigger: null,\n    collapsed: collapsed,\n    onBreakpoint: onBreakPoint,\n    breakpoint: \"lg\",\n    collapsedWidth: \"0\",\n    collapsible: true,\n    className: \"ant-sider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), __jsx(_Menu, {\n    theme: \"dark\",\n    mode: \"inline\",\n    selectedKeys: [selectedRoute],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, routes));\n}\n\n_s(SideBar, \"fY9DqRjL1i9HtXeq51l7RJzdYZY=\", false, function () {\n  return [useRouter, useDispatch];\n});\n\n_c = SideBar;\nexport default _c2 = /*#__PURE__*/memo(SideBar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SideBar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/tonysan/Desktop/guardian-simulation/GuardianSimulation/src/layouts/Sider/index.tsx"],"names":["ROUTES","useRouter","React","memo","useMemo","useDispatch","SideBar","collapsed","onBreakPoint","router","dispatch","routes","routesMap","map","Icon","icon","path","name","push","selectedRoute","matchedRoute","find","pathname","includes"],"mappings":";;;;;;;;;AACA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,IAAhB,EAAsBC,OAAtB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AASA,SAASC,OAAT,OAA4D;AAAA;;AAAA;;AAAA,MAAzCC,SAAyC,QAAzCA,SAAyC;AAAA,MAA9BC,YAA8B,QAA9BA,YAA8B;AAC1D,MAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,MAAMS,QAAQ,GAAGL,WAAW,EAA5B;AACA,MAAMM,MAAM,GAAGP,OAAO,CAAC,YAAM;AAE3B,QAAMQ,SAAS,GAAGZ,MAAM,CAACa,GAAP,CAAW;AAAA,UAASC,IAAT,SAAGC,IAAH;AAAA,UAAeC,IAAf,SAAeA,IAAf;AAAA,UAAqBC,IAArB,SAAqBA,IAArB;AAAA,aAC3B,YAAM,IAAN;AAAW,QAAA,GAAG,EAAED,IAAhB;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAMP,MAAM,CAACS,IAAP,CAAYF,IAAZ,CAAN;AAAA,SAA/B;AAAwD,QAAA,IAAI,EAAE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,IADH,CAD2B;AAAA,KAAX,CAAlB;AAKA,WAAOL,SAAP;AACD,GARqB,EAQnB,CAACH,MAAD,EAASC,QAAT,CARmB,CAAtB;AAUA,MAAMS,aAAa,GAAGf,OAAO,CAAC,YAAM;AAClC,QAAMgB,YAAY,GAAGpB,MAAM,CAACqB,IAAP,CAAY,iBAAc;AAAA,UAAXL,IAAW,SAAXA,IAAW;;AAC7C,UAAIA,IAAI,KAAK,GAAb,EAAkB;AAChB,eAAOP,MAAM,CAACa,QAAP,KAAoBN,IAA3B;AACD;;AACD,aAAOP,MAAM,CAACa,QAAP,CAAgBC,QAAhB,CAAyBP,IAAzB,CAAP;AACD,KALoB,CAArB;AAMA,WAAOI,YAAP,aAAOA,YAAP,uBAAOA,YAAY,CAAEJ,IAArB;AACD,GAR4B,EAQ1B,CAACP,MAAM,CAACa,QAAR,CAR0B,CAA7B;AASA,SACE,cAAQ,KAAR;AACE,IAAA,OAAO,EAAE,IADX;AAEE,IAAA,SAAS,EAAEf,SAFb;AAGE,IAAA,YAAY,EAAEC,YAHhB;AAIE,IAAA,UAAU,EAAC,IAJb;AAKE,IAAA,cAAc,EAAC,GALjB;AAME,IAAA,WAAW,MANb;AAOE,IAAA,SAAS,EAAC,WAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE;AAAM,IAAA,KAAK,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAiC,IAAA,YAAY,EAAE,CAACW,aAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,MADH,CAVF,CADF;AAgBD;;GAtCQL,O;UACQL,S,EACEI,W;;;KAFVC,O;AAwCT,kCAAeH,IAAI,CAACG,OAAD,CAAnB","sourcesContent":["import { Layout, Menu } from \"antd\"\nimport { ROUTES } from \"core/constants/routes\"\nimport { useRouter } from \"next/router\"\nimport React, { memo, useMemo } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { LoginOutlined, TranslationOutlined } from \"@ant-design/icons\"\nimport { stubTrue } from \"lodash\"\n\ninterface SideBarProps {\n  collapsed: boolean\n  onBreakPoint: (broken: boolean) => void\n}\n\nfunction SideBar({ collapsed, onBreakPoint }: SideBarProps) {\n  const router = useRouter()\n  const dispatch = useDispatch()\n  const routes = useMemo(() => {\n\n    const routesMap = ROUTES.map(({ icon: Icon, path, name }) => (\n      <Menu.Item key={path} onClick={() => router.push(path)} icon={<Icon />}>\n        {name}\n      </Menu.Item>\n    ))\n    return routesMap\n  }, [router, dispatch])\n\n  const selectedRoute = useMemo(() => {\n    const matchedRoute = ROUTES.find(({ path }) => {\n      if (path === \"/\") {\n        return router.pathname === path\n      }\n      return router.pathname.includes(path)\n    })\n    return matchedRoute?.path\n  }, [router.pathname])\n  return (\n    <Layout.Sider\n      trigger={null}\n      collapsed={collapsed}\n      onBreakpoint={onBreakPoint}\n      breakpoint=\"lg\"\n      collapsedWidth=\"0\"\n      collapsible\n      className=\"ant-sider\"\n    >\n      <div className=\"logo\" />\n      <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[selectedRoute]}>\n        {routes}\n      </Menu>\n    </Layout.Sider>\n  )\n}\n\nexport default memo(SideBar)\n"]},"metadata":{},"sourceType":"module"}
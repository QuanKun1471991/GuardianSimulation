{"ast":null,"code":"import _get from \"lodash/get\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport vesselServices from \"services/vessel/api\";\nimport { BaseFunctions, fetchAllSuccess, fetchAllFailed } from \"./actions\";\nimport { VesselActions } from \"./types\";\nexport function* fetchAll({\n  payload\n}) {\n  const {\n    onStart,\n    onSuccess,\n    onError,\n    params\n  } = payload;\n  let allData = [];\n  onStart();\n\n  try {\n    const {\n      data: {\n        data\n      }\n    } = yield call(vesselServices.fetchAll, params);\n    debugger;\n    allData = [...allData, ...data];\n    yield put(BaseFunctions.setState({\n      data: allData\n    }));\n    yield put(fetchAllSuccess());\n  } catch (e) {\n    onError(e);\n    yield put(fetchAllFailed({\n      error: _get(e, \"data.message\")\n    }));\n  }\n}\nexport default function* rootSaga() {\n  yield all([takeLatest(VesselActions.FETCH_ALL, fetchAll)]);\n}","map":{"version":3,"sources":["/Users/tonysan/Desktop/guardian-simulation/GuardianSimulation/src/services/vessel/sagas.ts"],"names":["all","call","put","takeLatest","vesselServices","BaseFunctions","fetchAllSuccess","fetchAllFailed","VesselActions","fetchAll","payload","onStart","onSuccess","onError","params","allData","data","setState","e","error","rootSaga","FETCH_ALL"],"mappings":";AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AAEA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,QAA+D,WAA/D;AACA,SAASC,aAAT,QAA+C,SAA/C;AAEA,OAAO,UAAUC,QAAV,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAiD;AACtD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA;AAA/B,MAA0CJ,OAAhD;AACA,MAAIK,OAAO,GAAG,EAAd;AACAJ,EAAAA,OAAO;;AACP,MAAI;AACF,UAAM;AACJK,MAAAA,IAAI,EAAE;AACJA,QAAAA;AADI;AADF,QAIF,MAAMf,IAAI,CAACG,cAAc,CAACK,QAAhB,EAA0BK,MAA1B,CAJd;AAKA;AACAC,IAAAA,OAAO,GAAG,CAAC,GAAGA,OAAJ,EAAa,GAAGC,IAAhB,CAAV;AACA,UAAMd,GAAG,CAACG,aAAa,CAACY,QAAd,CAAuB;AAAED,MAAAA,IAAI,EAAED;AAAR,KAAvB,CAAD,CAAT;AAEA,UAAMb,GAAG,CAACI,eAAe,EAAhB,CAAT;AACD,GAXD,CAWE,OAAOY,CAAP,EAAU;AACVL,IAAAA,OAAO,CAACK,CAAD,CAAP;AACA,UAAMhB,GAAG,CAACK,cAAc,CAAC;AAAEY,MAAAA,KAAK,EAAE,KAAID,CAAJ,EAAO,cAAP;AAAT,KAAD,CAAf,CAAT;AACD;AACF;AAED,eAAe,UAAUE,QAAV,GAAqB;AAClC,QAAMpB,GAAG,CAAC,CAACG,UAAU,CAACK,aAAa,CAACa,SAAf,EAA0BZ,QAA1B,CAAX,CAAD,CAAT;AACD","sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\"\nimport vesselServices from \"services/vessel/api\"\nimport { get } from \"lodash\"\nimport { BaseFunctions, fetchAllSuccess, fetchAllFailed } from \"./actions\"\nimport { VesselActions, IFetchAllAction } from \"./types\"\n\nexport function* fetchAll({ payload }: IFetchAllAction) {\n  const { onStart, onSuccess, onError, params } = payload\n  let allData = []\n  onStart()\n  try {\n    const {\n      data: {\n        data,\n      },\n    } = yield call(vesselServices.fetchAll, params)\n    debugger\n    allData = [...allData, ...data]\n    yield put(BaseFunctions.setState({ data: allData }))\n\n    yield put(fetchAllSuccess())\n  } catch (e) {\n    onError(e)\n    yield put(fetchAllFailed({ error: get(e, \"data.message\") }))\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([takeLatest(VesselActions.FETCH_ALL, fetchAll)])\n}\n"]},"metadata":{},"sourceType":"module"}
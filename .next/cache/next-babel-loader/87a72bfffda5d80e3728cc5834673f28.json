{"ast":null,"code":"import produce from \"immer\";\nimport genReducers from \"services/_base/reducers\";\nimport { BaseActions } from \"./actions\";\nimport { AuthActions } from \"./types\";\nexport const initialState = {\n  auth: null,\n  loading: false,\n  error: null,\n  authorized: false,\n  authorizing: false\n};\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case AuthActions.LOGIN:\n        {\n          draft.error = null;\n          draft.loading = true;\n          return draft;\n        }\n\n      case AuthActions.LOGIN_SUCCESS:\n        {\n          draft.loading = false;\n          draft.authorized = true;\n          return draft;\n        }\n\n      case AuthActions.LOGIN_FAILED:\n        {\n          const {\n            error\n          } = action.payload;\n          draft.loading = false;\n          draft.error = error;\n          return draft;\n        }\n\n      default:\n        return genReducers(initialState, BaseActions)(state, action);\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/tonysan/Desktop/guardian-simulation/GuardianSimulation/src/services/auth/reducers.ts"],"names":["produce","genReducers","BaseActions","AuthActions","initialState","auth","loading","error","authorized","authorizing","reducer","state","action","draft","type","LOGIN","LOGIN_SUCCESS","LOGIN_FAILED","payload"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,WAAT,QAAyD,SAAzD;AAEA,OAAO,MAAMC,YAAwB,GAAG;AACtCC,EAAAA,IAAI,EAAE,IADgC;AAEtCC,EAAAA,OAAO,EAAE,KAF6B;AAGtCC,EAAAA,KAAK,EAAE,IAH+B;AAItCC,EAAAA,UAAU,EAAE,KAJ0B;AAKtCC,EAAAA,WAAW,EAAE;AALyB,CAAjC;;AAQP,MAAMC,OAA6C,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACtF,SAAOZ,OAAO,CAAaW,KAAb,EAAqBE,KAAD,IAAW;AAC3C,YAAQD,MAAM,CAACE,IAAf;AACE,WAAKX,WAAW,CAACY,KAAjB;AAAwB;AACtBF,UAAAA,KAAK,CAACN,KAAN,GAAc,IAAd;AACAM,UAAAA,KAAK,CAACP,OAAN,GAAgB,IAAhB;AAEA,iBAAOO,KAAP;AACD;;AACD,WAAKV,WAAW,CAACa,aAAjB;AAAgC;AAC9BH,UAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,UAAAA,KAAK,CAACL,UAAN,GAAmB,IAAnB;AAEA,iBAAOK,KAAP;AACD;;AACD,WAAKV,WAAW,CAACc,YAAjB;AAA+B;AAC7B,gBAAM;AAAEV,YAAAA;AAAF,cAAYK,MAAM,CAACM,OAAzB;AAEAL,UAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,UAAAA,KAAK,CAACN,KAAN,GAAcA,KAAd;AAEA,iBAAOM,KAAP;AACD;;AACD;AACE,eAAOZ,WAAW,CAACG,YAAD,EAAeF,WAAf,CAAX,CAAuCS,KAAvC,EAA8CC,MAA9C,CAAP;AAtBJ;AAwBD,GAzBa,CAAd;AA0BD,CA3BD;;AA6BA,eAAeF,OAAf","sourcesContent":["import produce from \"immer\"\nimport { Reducer } from \"redux\"\nimport genReducers from \"services/_base/reducers\"\nimport { BaseActions } from \"./actions\"\nimport { AuthActions, AuthActionTypes, IAuthState } from \"./types\"\n\nexport const initialState: IAuthState = {\n  auth: null,\n  loading: false,\n  error: null,\n  authorized: false,\n  authorizing: false,\n}\n\nconst reducer: Reducer<IAuthState, AuthActionTypes> = (state = initialState, action) => {\n  return produce<IAuthState>(state, (draft) => {\n    switch (action.type) {\n      case AuthActions.LOGIN: {\n        draft.error = null\n        draft.loading = true\n\n        return draft\n      }\n      case AuthActions.LOGIN_SUCCESS: {\n        draft.loading = false\n        draft.authorized = true\n\n        return draft\n      }\n      case AuthActions.LOGIN_FAILED: {\n        const { error } = action.payload\n\n        draft.loading = false\n        draft.error = error\n\n        return draft\n      }\n      default:\n        return genReducers(initialState, BaseActions)(state, action)\n    }\n  })\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}
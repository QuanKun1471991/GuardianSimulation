{"ast":null,"code":"import genActions from \"services/_base/actions\";\nimport { VesselActions } from \"./types\";\nexport const {\n  funcs: BaseFunctions,\n  types: BaseActions\n} = genActions(\"vessel\");\nexport function fetchAll(payload) {\n  return {\n    type: VesselActions.FETCH_ALL,\n    payload\n  };\n}\nexport function fetchAllSuccess() {\n  return {\n    type: VesselActions.FETCH_ALL_SUCCESS\n  };\n}\nexport function fetchAllFailed(payload) {\n  return {\n    type: VesselActions.FETCH_ALL_FAILED,\n    payload\n  };\n}\nexport function simulate(payload) {\n  return {\n    type: VesselActions.SIMULATE,\n    payload\n  };\n}","map":{"version":3,"sources":["/Users/tonysan/Desktop/guardian-simulation/GuardianSimulation/src/services/vessel/actions.ts"],"names":["genActions","VesselActions","funcs","BaseFunctions","types","BaseActions","fetchAll","payload","type","FETCH_ALL","fetchAllSuccess","FETCH_ALL_SUCCESS","fetchAllFailed","FETCH_ALL_FAILED","simulate","SIMULATE"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,wBAAvB;AACA,SAIEC,aAJF,QAMO,SANP;AAQA,OAAO,MAAM;AAAEC,EAAAA,KAAK,EAAEC,aAAT;AAAwBC,EAAAA,KAAK,EAAEC;AAA/B,IAA+CL,UAAU,CAAC,QAAD,CAA/D;AAEP,OAAO,SAASM,QAAT,CAAkBC,OAAlB,EAA4C;AACjD,SAAO;AAAEC,IAAAA,IAAI,EAAEP,aAAa,CAACQ,SAAtB;AAAiCF,IAAAA;AAAjC,GAAP;AACD;AAED,OAAO,SAASG,eAAT,GAAmD;AACxD,SAAO;AACLF,IAAAA,IAAI,EAAEP,aAAa,CAACU;AADf,GAAP;AAGD;AAED,OAAO,SAASC,cAAT,CAAwBL,OAAxB,EAA2E;AAChF,SAAO;AACLC,IAAAA,IAAI,EAAEP,aAAa,CAACY,gBADf;AAELN,IAAAA;AAFK,GAAP;AAID;AACD,OAAO,SAASO,QAAT,CAAkBP,OAAlB,EAA4C;AACjD,SAAO;AAAEC,IAAAA,IAAI,EAAEP,aAAa,CAACc,QAAtB;AAAgCR,IAAAA;AAAhC,GAAP;AACD","sourcesContent":["import genActions from \"services/_base/actions\"\nimport {\n  IFetchAllSuccessAction,\n  IFetchAllFailedAction,\n  IFetchAllAction,\n  VesselActions,\n  ISimulateAction,\n} from \"./types\"\n\nexport const { funcs: BaseFunctions, types: BaseActions } = genActions(\"vessel\")\n\nexport function fetchAll(payload): IFetchAllAction {\n  return { type: VesselActions.FETCH_ALL, payload }\n}\n\nexport function fetchAllSuccess(): IFetchAllSuccessAction {\n  return {\n    type: VesselActions.FETCH_ALL_SUCCESS,\n  }\n}\n\nexport function fetchAllFailed(payload: { error: string }): IFetchAllFailedAction {\n  return {\n    type: VesselActions.FETCH_ALL_FAILED,\n    payload,\n  }\n}\nexport function simulate(payload): ISimulateAction {\n  return { type: VesselActions.SIMULATE, payload }\n}\n"]},"metadata":{},"sourceType":"module"}
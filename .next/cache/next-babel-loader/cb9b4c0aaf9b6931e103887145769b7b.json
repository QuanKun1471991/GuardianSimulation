{"ast":null,"code":"import _get from \"lodash/get\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/tonysan/Desktop/guardian-simulation/GuardianSimulation/src/components/SimulationResults/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport styles from './styles';\nimport { Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField'; // import update from 'immutability-helper';\n\nimport { BaseFunctions } from \"services/vessel/actions\";\nimport { useDispatch } from 'react-redux';\nimport produce from \"immer\";\nvar useStyles = makeStyles(styles);\n\nfunction Index(_ref) {\n  _s();\n\n  var _this = this;\n\n  var selectedVessel = _ref.selectedVessel;\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  debugger;\n  var simulationRoutes = selectedVessel.simulationRoutes,\n      _selectedVessel$simul = selectedVessel.simulationRoutes,\n      loading = _selectedVessel$simul.loading,\n      data = _selectedVessel$simul.data;\n\n  var _useState = useState(data),\n      rows = _useState[0],\n      setRows = _useState[1];\n\n  useEffect(function () {\n    setRows(data);\n  }, [data]);\n  var handleUpdateRow = useCallback(function (index, key, value) {\n    setRows(function (prevRows) {\n      return produce(prevRows, function (draft) {\n        draft[index][key] = value;\n      });\n    });\n  }, []);\n\n  var handleUpdate = function handleUpdate() {\n    dispatch(BaseFunctions.setState({\n      field: \"selectedVessel\",\n      simulationRoutes: _objectSpread(_objectSpread({}, simulationRoutes), {}, {\n        data: rows,\n        update: true\n      })\n    }));\n  };\n\n  var resultData = useCallback(function () {\n    return __jsx(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.tableWrapper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, __jsx(Table, {\n      className: classes.table,\n      stickyHeader: true,\n      \"aria-label\": \"sticky table\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, __jsx(TableHead, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, __jsx(TableRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, \"Longitude\"), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, \"Latitude\"), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, \"Heading\"), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, \"Speed\"), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, \"Timestamp\"), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, \"Created_at\"), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, rows.length !== 0 && __jsx(React.Fragment, null, __jsx(Button, {\n      size: \"small\",\n      variant: \"contained\",\n      color: \"primary\",\n      disableElevation: true,\n      onClick: function onClick() {\n        return handleUpdate();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, \"Update\"))))), __jsx(TableBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, rows.map(function (row, index) {\n      return __jsx(TableRow, {\n        key: row.id,\n        style: {\n          whiteSpace: 'normal',\n          wordWrap: 'break-word',\n          backgroundColor: 'white'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }\n      }, __jsx(TableCell, {\n        className: classes.tableCell,\n        align: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, __jsx(TextField, {\n        id: \"standard-basic\",\n        value: _get(row, 'longitude'),\n        onChange: function onChange(e) {\n          return handleUpdateRow(index, 'longitude', e.currentTarget.value);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }\n      })), __jsx(TableCell, {\n        className: classes.tableCell,\n        align: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, __jsx(TextField, {\n        id: \"standard-basic\",\n        value: _get(row, 'latitude'),\n        onChange: function onChange(e) {\n          return handleUpdateRow(index, 'latitude', e.currentTarget.value);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 19\n        }\n      })), __jsx(TableCell, {\n        className: classes.tableCell,\n        align: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, __jsx(TextField, {\n        id: \"standard-basic\",\n        value: _get(row, 'heading'),\n        onChange: function onChange(e) {\n          return handleUpdateRow(index, {\n            heading: {\n              $set: e.currentTarget.value\n            }\n          });\n        },\n        disabled: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }\n      })), __jsx(TableCell, {\n        className: classes.tableCell,\n        align: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, __jsx(TextField, {\n        id: \"standard-basic\",\n        value: _get(row, 'speed'),\n        onChange: function onChange(e) {\n          return handleUpdateRow(index, {\n            speed: {\n              $set: e.currentTarget.value\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 19\n        }\n      })), __jsx(TableCell, {\n        className: classes.tableCell,\n        align: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, __jsx(TextField, {\n        id: \"standard-basic\",\n        value: _get(row, 'timestamp'),\n        onChange: function onChange(e) {\n          return handleUpdateRow(index, {\n            timestamp: {\n              $set: e.currentTarget.value\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 19\n        }\n      })), __jsx(TableCell, {\n        className: classes.tableCell,\n        align: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, __jsx(TextField, {\n        id: \"standard-basic\",\n        value: _get(row, 'created_at'),\n        onChange: function onChange(e) {\n          return handleUpdateRow(index, {\n            created_at: {\n              $set: e.currentTarget.value\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 19\n        }\n      })), __jsx(TableCell, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }));\n    }))));\n  }, [simulationRoutes, rows]);\n  return __jsx(React.Fragment, null, !loading && resultData());\n}\n\n_s(Index, \"gU4KpdnBwLmjoTluBUniFsNAkzE=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/tonysan/Desktop/guardian-simulation/GuardianSimulation/src/components/SimulationResults/index.tsx"],"names":["React","useCallback","useState","useEffect","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","styles","Grid","Button","TextField","BaseFunctions","useDispatch","produce","useStyles","Index","selectedVessel","classes","dispatch","simulationRoutes","loading","data","rows","setRows","handleUpdateRow","index","key","value","prevRows","draft","handleUpdate","setState","field","update","resultData","tableWrapper","table","length","map","row","id","whiteSpace","wordWrap","backgroundColor","tableCell","e","currentTarget","heading","$set","speed","timestamp","created_at"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport styles from './styles';\nimport { get } from 'lodash';\nimport { Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n// import update from 'immutability-helper';\nimport {BaseFunctions} from \"services/vessel/actions\"\nimport { useDispatch } from 'react-redux';\nimport produce from \"immer\"\n\nconst useStyles = makeStyles(styles);\n\ninterface simulationResultProps {\n  selectedVessel: any\n}\n\nfunction Index({selectedVessel}: simulationResultProps) {\n  const classes = useStyles();\n  const dispatch = useDispatch()\n  debugger\n  const {\n    simulationRoutes, simulationRoutes: { loading, data },\n  } = selectedVessel;\n\n  const [rows, setRows] = useState(data);\n\n  useEffect(() => {\n    setRows(data);\n  }, [data]);\n\n  const handleUpdateRow = useCallback((index: number, key: string, value: any) => {\n    setRows((prevRows: any) => produce(prevRows, draft => { \n      draft[index][key] = value\n     }));\n  }, []);\n\n  const handleUpdate = () => {\n    dispatch(BaseFunctions.setState({\n      field: \"selectedVessel\",\n      simulationRoutes: {\n        ...simulationRoutes,\n        data: rows,\n        update: true\n      },\n    }))\n  };\n\n  const resultData = useCallback(() => {\n    return (\n      <Grid item xs={12} className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">\n                Longitude\n              </TableCell>\n              <TableCell align=\"center\">\n                Latitude\n              </TableCell>\n              <TableCell align=\"center\">\n                Heading\n              </TableCell>\n              <TableCell align=\"center\">\n                Speed\n              </TableCell>\n              <TableCell align=\"center\">\n                Timestamp\n              </TableCell>\n              <TableCell align=\"center\">\n                Created_at\n              </TableCell>\n              <TableCell align=\"center\">\n                {rows.length !== 0 && (\n                  <>\n                    <Button size='small' variant=\"contained\" color=\"primary\" disableElevation onClick={() => handleUpdate()}>\n                      Update\n                    </Button>\n                  </>\n                )}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row: any, index: number) => (\n              <TableRow key={row.id} style={{ whiteSpace: 'normal', wordWrap: 'break-word', backgroundColor: 'white' }}>\n                <TableCell className={classes.tableCell} align=\"center\">\n                  <TextField\n                    id=\"standard-basic\"\n                    value={get(row, 'longitude')}\n                    onChange={e => handleUpdateRow(index, 'longitude', e.currentTarget.value)}\n                  />\n                </TableCell>\n                <TableCell className={classes.tableCell} align=\"center\">\n                  <TextField\n                    id=\"standard-basic\"\n                    value={get(row, 'latitude')}\n                    onChange={e => handleUpdateRow(index, 'latitude', e.currentTarget.value)}\n                  />\n                </TableCell>\n                <TableCell className={classes.tableCell} align=\"center\">\n                  <TextField\n                    id=\"standard-basic\"\n                    value={get(row, 'heading')}\n                    onChange={e => handleUpdateRow(index, { heading: { $set: e.currentTarget.value } })}\n                    disabled\n                  />\n                </TableCell>\n                <TableCell className={classes.tableCell} align=\"center\">\n                  <TextField\n                    id=\"standard-basic\"\n                    value={get(row, 'speed')}\n                    onChange={e => handleUpdateRow(index, { speed: { $set: e.currentTarget.value } })}\n                  />\n                </TableCell>\n                <TableCell className={classes.tableCell} align=\"center\">\n                  <TextField\n                    id=\"standard-basic\"\n                    value={get(row, 'timestamp')}\n                    onChange={e => handleUpdateRow(index, { timestamp: { $set: e.currentTarget.value } })}\n                  />\n                </TableCell>\n                <TableCell className={classes.tableCell} align=\"center\">\n                  <TextField\n                    id=\"standard-basic\"\n                    value={get(row, 'created_at')}\n                    onChange={e => handleUpdateRow(index, { created_at: { $set: e.currentTarget.value } })}\n                  />\n                </TableCell>\n                <TableCell />\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Grid>\n    );\n  }, [simulationRoutes, rows]);\n\n  return (\n    <>\n      {!loading && resultData()}\n    </>\n  );\n}\n\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}
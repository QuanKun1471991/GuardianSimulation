{"ast":null,"code":"import _get from \"lodash/get\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/tonysan/Desktop/guardian-simulation/GuardianSimulation/src/components/SimulationResults/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport styles from './styles';\nimport { Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport update from 'immutability-helper';\nimport { BaseFunctions } from \"services/vessel/actions\";\nvar useStyles = makeStyles(styles);\n\nfunction Index(props) {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n  var simulationRoutes = props.simulationRoutes;\n  var dispatch = useDispatch();\n  var loading = simulationRoutes.loading,\n      data = simulationRoutes.data;\n\n  var _useState = useState(data),\n      rows = _useState[0],\n      setRows = _useState[1];\n\n  useEffect(function () {\n    setRows(data);\n  }, [data]);\n  var handleUpdateRow = useCallback(function (index, path) {\n    setRows(function (prevRows) {\n      return update(prevRows, _defineProperty({}, index, path));\n    });\n  }, []);\n\n  var handleUpdate = function handleUpdate() {\n    dispatch(BaseFunctions.setState({}));\n  };\n\n  var resultData = useCallback(function () {\n    return __jsx(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.tableWrapper,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, __jsx(Table, {\n      className: classes.table,\n      stickyHeader: true,\n      \"aria-label\": \"sticky table\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, __jsx(TableHead, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, __jsx(TableRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, \"Longitude\"), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, \"Latitude\"), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \"Heading\"), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, \"Speed\"), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, \"Timestamp\"), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, \"Created_at\"), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, rows.length !== 0 && __jsx(React.Fragment, null, __jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disableElevation: true,\n      onClick: function onClick() {\n        return handleUpdate();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \"Update\"))))), __jsx(TableBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, rows.map(function (row, index) {\n      return __jsx(TableRow, {\n        key: row.id,\n        style: {\n          whiteSpace: 'normal',\n          wordWrap: 'break-word',\n          backgroundColor: 'white'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }\n      }, __jsx(TableCell, {\n        className: classes.tableCell,\n        align: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, __jsx(TextField, {\n        id: \"standard-basic\",\n        value: _get(row, 'longitude'),\n        onChange: function onChange(e) {\n          return handleUpdateRow(index, {\n            longitude: {\n              $set: e.currentTarget.value\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }\n      })), __jsx(TableCell, {\n        className: classes.tableCell,\n        align: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, __jsx(TextField, {\n        id: \"standard-basic\",\n        value: _get(row, 'latitude'),\n        onChange: function onChange(e) {\n          return handleUpdateRow(index, {\n            latitude: {\n              $set: e.currentTarget.value\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }\n      })), __jsx(TableCell, {\n        className: classes.tableCell,\n        align: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, __jsx(TextField, {\n        id: \"standard-basic\",\n        value: _get(row, 'heading'),\n        onChange: function onChange(e) {\n          return handleUpdateRow(index, {\n            heading: {\n              $set: e.currentTarget.value\n            }\n          });\n        },\n        disabled: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }\n      })), __jsx(TableCell, {\n        className: classes.tableCell,\n        align: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, __jsx(TextField, {\n        id: \"standard-basic\",\n        value: _get(row, 'speed'),\n        onChange: function onChange(e) {\n          return handleUpdateRow(index, {\n            speed: {\n              $set: e.currentTarget.value\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }\n      })), __jsx(TableCell, {\n        className: classes.tableCell,\n        align: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, __jsx(TextField, {\n        id: \"standard-basic\",\n        value: _get(row, 'timestamp'),\n        onChange: function onChange(e) {\n          return handleUpdateRow(index, {\n            timestamp: {\n              $set: e.currentTarget.value\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }\n      })), __jsx(TableCell, {\n        className: classes.tableCell,\n        align: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, __jsx(TextField, {\n        id: \"standard-basic\",\n        value: _get(row, 'created_at'),\n        onChange: function onChange(e) {\n          return handleUpdateRow(index, {\n            created_at: {\n              $set: e.currentTarget.value\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 19\n        }\n      })), __jsx(TableCell, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }));\n    }))));\n  }, [simulationRoutes, rows]);\n  return __jsx(React.Fragment, null, !loading && resultData());\n}\n\n_s(Index, \"gU4KpdnBwLmjoTluBUniFsNAkzE=\", true, function () {\n  return [useStyles];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/tonysan/Desktop/guardian-simulation/GuardianSimulation/src/components/SimulationResults/index.tsx"],"names":["React","useCallback","useState","useEffect","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","styles","Grid","Button","TextField","update","BaseFunctions","useStyles","Index","props","classes","simulationRoutes","dispatch","useDispatch","loading","data","rows","setRows","handleUpdateRow","index","path","prevRows","handleUpdate","setState","resultData","tableWrapper","table","length","map","row","id","whiteSpace","wordWrap","backgroundColor","tableCell","e","longitude","$set","currentTarget","value","latitude","heading","speed","timestamp","created_at"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport styles from './styles';\nimport { get } from 'lodash';\nimport { Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport update from 'immutability-helper';\nimport {BaseFunctions} from \"services/vessel/actions\"\n\nconst useStyles = makeStyles(styles);\n\nfunction Index(props: any) {\n  const classes = useStyles();\n  const { simulationRoutes } = props;\n  const dispatch = useDispatch()\n\n  const { loading, data } = simulationRoutes;\n\n  const [rows, setRows] = useState(data);\n\n  useEffect(() => {\n    setRows(data);\n  }, [data]);\n\n  const handleUpdateRow = useCallback((index: number, path: any) => {\n    setRows((prevRows: any) => update(prevRows, { [index]: path }));\n  }, []);\n\n  const handleUpdate = () => {\n    dispatch(BaseFunctions.setState({\n      \n    }))\n  };\n\n  const resultData = useCallback(() => {\n    return (\n      <Grid item xs={12} className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">\n                Longitude\n              </TableCell>\n              <TableCell align=\"center\">\n                Latitude\n              </TableCell>\n              <TableCell align=\"center\">\n                Heading\n              </TableCell>\n              <TableCell align=\"center\">\n                Speed\n              </TableCell>\n              <TableCell align=\"center\">\n                Timestamp\n              </TableCell>\n              <TableCell align=\"center\">\n                Created_at\n              </TableCell>\n              <TableCell align=\"center\">\n                {rows.length !== 0 && (\n                  <>\n                    <Button variant=\"contained\" color=\"primary\" disableElevation onClick={() => handleUpdate()}>\n                      Update\n                    </Button>\n                  </>\n                )}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row: any, index: number) => (\n              <TableRow key={row.id} style={{ whiteSpace: 'normal', wordWrap: 'break-word', backgroundColor: 'white' }}>\n                <TableCell className={classes.tableCell} align=\"center\">\n                  <TextField\n                    id=\"standard-basic\"\n                    value={get(row, 'longitude')}\n                    onChange={e => handleUpdateRow(index, { longitude: { $set: e.currentTarget.value } })}\n                  />\n                </TableCell>\n                <TableCell className={classes.tableCell} align=\"center\">\n                  <TextField\n                    id=\"standard-basic\"\n                    value={get(row, 'latitude')}\n                    onChange={e => handleUpdateRow(index, { latitude: { $set: e.currentTarget.value } })}\n                  />\n                </TableCell>\n                <TableCell className={classes.tableCell} align=\"center\">\n                  <TextField\n                    id=\"standard-basic\"\n                    value={get(row, 'heading')}\n                    onChange={e => handleUpdateRow(index, { heading: { $set: e.currentTarget.value } })}\n                    disabled\n                  />\n                </TableCell>\n                <TableCell className={classes.tableCell} align=\"center\">\n                  <TextField\n                    id=\"standard-basic\"\n                    value={get(row, 'speed')}\n                    onChange={e => handleUpdateRow(index, { speed: { $set: e.currentTarget.value } })}\n                  />\n                </TableCell>\n                <TableCell className={classes.tableCell} align=\"center\">\n                  <TextField\n                    id=\"standard-basic\"\n                    value={get(row, 'timestamp')}\n                    onChange={e => handleUpdateRow(index, { timestamp: { $set: e.currentTarget.value } })}\n                  />\n                </TableCell>\n                <TableCell className={classes.tableCell} align=\"center\">\n                  <TextField\n                    id=\"standard-basic\"\n                    value={get(row, 'created_at')}\n                    onChange={e => handleUpdateRow(index, { created_at: { $set: e.currentTarget.value } })}\n                  />\n                </TableCell>\n                <TableCell />\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Grid>\n    );\n  }, [simulationRoutes, rows]);\n\n  return (\n    <>\n      {!loading && resultData()}\n    </>\n  );\n}\n\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"axios\";\nimport format from \"date-fns/format\";\nvar TIME_ZONE_OFFSET = format(new Date(), \"XX\");\nvar instance = axios.create({\n  baseURL: \"\".concat(process.env.NEXT_PUBLIC_API_URL, \"/simulation/v1\"),\n  headers: {\n    \"x-time-zone-offset\": TIME_ZONE_OFFSET,\n    'Access-Token': process.env.NEXT_PUBLIC_API_TOKEN\n  }\n});\ninstance.interceptors.request.use(function (config) {\n  return _objectSpread(_objectSpread({}, config), {}, {\n    headers: _objectSpread({}, config.headers)\n  });\n}, function (error) {\n  return Promise.reject(error);\n});\ninstance.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  return Promise.reject(error.response);\n});\nexport default instance;","map":null,"metadata":{},"sourceType":"module"}
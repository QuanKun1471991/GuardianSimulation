{"ast":null,"code":"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useMemo } from \"react\";\nimport { ReactReduxContext } from \"react-redux\";\nimport getSagaInjectors from \"services/_base/injectSagas\";\n\nconst useInjectSaga = ({\n  key,\n  saga,\n  mode\n}) => {\n  const context = React.useContext(ReactReduxContext);\n  useMemo(() => {\n    const injectors = getSagaInjectors(context.store);\n    injectors.injectSaga(key, {\n      saga,\n      mode\n    });\n    return context.store;\n  }, []);\n  useEffect(() => {\n    return () => {\n      const injectors = getSagaInjectors(context.store);\n      injectors.ejectSaga(key);\n    };\n  }, []);\n};\n\nexport default useInjectSaga;","map":{"version":3,"sources":["/Users/tonysan/Desktop/guardian-simulation/GuardianSimulation/src/core/hooks/useInjectSaga.ts"],"names":["React","useEffect","useMemo","ReactReduxContext","getSagaInjectors","useInjectSaga","key","saga","mode","context","useContext","injectors","store","injectSaga","ejectSaga"],"mappings":"AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,QAA0C,OAA1C;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,IAAP;AAAaC,EAAAA;AAAb,CAAD,KAA2C;AAC/D,QAAMC,OAAO,GAAGT,KAAK,CAACU,UAAN,CAAiBP,iBAAjB,CAAhB;AAEAD,EAAAA,OAAO,CAAC,MAAM;AACZ,UAAMS,SAAS,GAAGP,gBAAgB,CAACK,OAAO,CAACG,KAAT,CAAlC;AAEAD,IAAAA,SAAS,CAACE,UAAV,CAAqBP,GAArB,EAA0B;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAA1B;AAEA,WAAOC,OAAO,CAACG,KAAf;AACD,GANM,EAMJ,EANI,CAAP;AAQAX,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACX,YAAMU,SAAS,GAAGP,gBAAgB,CAACK,OAAO,CAACG,KAAT,CAAlC;AAEAD,MAAAA,SAAS,CAACG,SAAV,CAAoBR,GAApB;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAOD,CAlBD;;AAoBA,eAAeD,aAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useMemo } from \"react\"\nimport { ReactReduxContext } from \"react-redux\"\nimport getSagaInjectors from \"services/_base/injectSagas\"\nimport { InjectSagaParams } from \"types/redux\"\n\nconst useInjectSaga = ({ key, saga, mode }: InjectSagaParams) => {\n  const context = React.useContext(ReactReduxContext)\n\n  useMemo(() => {\n    const injectors = getSagaInjectors(context.store)\n\n    injectors.injectSaga(key, { saga, mode })\n\n    return context.store\n  }, [])\n\n  useEffect(() => {\n    return () => {\n      const injectors = getSagaInjectors(context.store)\n\n      injectors.ejectSaga(key)\n    }\n  }, [])\n}\n\nexport default useInjectSaga\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export const forEach = (e, iterate) => {\n  const keys = Object.keys(e);\n  return keys.forEach((k, i) => iterate({\n    key: k,\n    value: e[k]\n  }, i));\n};","map":{"version":3,"sources":["/Users/tonysan/Desktop/guardian-simulation/GuardianSimulation/src/core/utils/enum.ts"],"names":["forEach","e","iterate","keys","Object","k","i","key","value"],"mappings":"AAEA,OAAO,MAAMA,OAAO,GAAG,CAAIC,CAAJ,EAAqCC,OAArC,KAA6D;AAClF,QAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,CAAZ,CAAb;AACA,SAAOE,IAAI,CAACH,OAAL,CAAa,CAACK,CAAD,EAAIC,CAAJ,KAAUJ,OAAO,CAAC;AAAEK,IAAAA,GAAG,EAAEF,CAAP;AAAUG,IAAAA,KAAK,EAAEP,CAAC,CAACI,CAAD;AAAlB,GAAD,EAA0BC,CAA1B,CAA9B,CAAP;AACD,CAHM","sourcesContent":["type Ilerate<T> = ({ key, value }: { key: keyof T; value: T[keyof T] }, index: number) => void\n\nexport const forEach = <T>(e: { [key in keyof T]: T[key] }, iterate: Ilerate<T>) => {\n  const keys = Object.keys(e) as Array<keyof T>\n  return keys.forEach((k, i) => iterate({ key: k, value: e[k] }, i))\n}\n"]},"metadata":{},"sourceType":"module"}
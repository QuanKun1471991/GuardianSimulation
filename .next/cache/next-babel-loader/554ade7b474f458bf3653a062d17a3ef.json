{"ast":null,"code":"import _SendOutlined from \"@ant-design/icons/SendOutlined\";\nimport _LineChartOutlined from \"@ant-design/icons/LineChartOutlined\";\nimport _ClearOutlined from \"@ant-design/icons/ClearOutlined\";\nvar _jsxFileName = \"/Users/tonysan/Desktop/guardian-simulation/GuardianSimulation/src/components/SimulationSettings/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react'; // import { makeStyles } from '@material-ui/core/styles';\n\nimport { connect } from 'react-redux'; // import IconButton from '@material-ui/core/IconButton';\n// import ClearIcon from '@material-ui/icons/Clear';\n// import LayersClearIcon from '@material-ui/icons/LayersClear';\n// import SendIcon from '@material-ui/icons/Send';\n\nfunction Index(_ref) {\n  let {\n    showSimulationRoutes,\n    handleClickClearDraw,\n    handleClickClearDrawLayer,\n    handleClickSend\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"showSimulationRoutes\", \"handleClickClearDraw\", \"handleClickClearDrawLayer\", \"handleClickSend\"]);\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, showSimulationRoutes && __jsx(\"div\", {\n    className: \"simulationSetting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    onClick: handleClickClearDraw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, __jsx(_ClearOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    onClick: handleClickClearDrawLayer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, __jsx(_LineChartOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    onClick: handleClickSend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, __jsx(_SendOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport const SimulationSettings = connect(state => ({\n  showSimulationRoutes: state.cargoMap.selectedCargo.simulationRoutes.show\n}))(Index);","map":{"version":3,"sources":["/Users/tonysan/Desktop/guardian-simulation/GuardianSimulation/src/components/SimulationSettings/index.tsx"],"names":["React","connect","Index","showSimulationRoutes","handleClickClearDraw","handleClickClearDrawLayer","handleClickSend","props","SimulationSettings","state","cargoMap","selectedCargo","simulationRoutes","show"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;AACA;AACA;AACA;;AAKA,SAASC,KAAT,OAMQ;AAAA,MANO;AACbC,IAAAA,oBADa;AAEbC,IAAAA,oBAFa;AAGbC,IAAAA,yBAHa;AAIbC,IAAAA;AAJa,GAMP;AAAA,MADHC,KACG;;AAEN,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,oBAAoB,IACnB;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,OAAO,EAAEC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,EAIE;AAAK,IAAA,OAAO,EAAEC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOE;AAAK,IAAA,OAAO,EAAEC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CAFJ,CADF;AAiBD;;AAED,OAAO,MAAME,kBAAkB,GAAGP,OAAO,CAAEQ,KAAD,KAAiB;AACzDN,EAAAA,oBAAoB,EAAEM,KAAK,CAACC,QAAN,CAAeC,aAAf,CAA6BC,gBAA7B,CAA8CC;AADX,CAAjB,CAAD,CAAP,CAE9BX,KAF8B,CAA3B","sourcesContent":["import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\n// import IconButton from '@material-ui/core/IconButton';\n// import ClearIcon from '@material-ui/icons/Clear';\n// import LayersClearIcon from '@material-ui/icons/LayersClear';\n// import SendIcon from '@material-ui/icons/Send';\nimport { ClearOutlined, LineChartOutlined, SendOutlined } from \"@ant-design/icons\"\n\n\n\nfunction Index({\n  showSimulationRoutes,\n  handleClickClearDraw,\n  handleClickClearDrawLayer,\n  handleClickSend,\n  ...props\n}: any) {\n\n  return (\n    <React.Fragment>\n      {showSimulationRoutes && (\n        <div className=\"simulationSetting\">\n          <div onClick={handleClickClearDraw}>\n          <ClearOutlined/>\n          </div>\n          <div onClick={handleClickClearDrawLayer}>\n            <LineChartOutlined/>\n          </div>\n          <div onClick={handleClickSend}>\n            <SendOutlined/>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport const SimulationSettings = connect((state: any) => ({\n  showSimulationRoutes: state.cargoMap.selectedCargo.simulationRoutes.show,\n}))(Index);\n"]},"metadata":{},"sourceType":"module"}
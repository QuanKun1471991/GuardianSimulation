exports.ids = [1];
exports.modules = {

/***/ "./src/components/Layers/Port/index.tsx":
/*!**********************************************!*\
  !*** ./src/components/Layers/Port/index.tsx ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ol_source_Vector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ol/source/Vector */ \"ol/source/Vector\");\n/* harmony import */ var ol_source_Vector__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ol_source_Vector__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var ol_style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ol/style */ \"ol/style\");\n/* harmony import */ var ol_style__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(ol_style__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var ol_format_GeoJSON__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ol/format/GeoJSON */ \"ol/format/GeoJSON\");\n/* harmony import */ var ol_format_GeoJSON__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(ol_format_GeoJSON__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var ol_layer_Vector__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ol/layer/Vector */ \"ol/layer/Vector\");\n/* harmony import */ var ol_layer_Vector__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(ol_layer_Vector__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var ol_layer_Group__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ol/layer/Group */ \"ol/layer/Group\");\n/* harmony import */ var ol_layer_Group__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(ol_layer_Group__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var core_model_Map__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core/model/Map */ \"./src/core/model/Map/index.tsx\");\n/* harmony import */ var immer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! immer */ \"immer\");\n/* harmony import */ var immer__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(immer__WEBPACK_IMPORTED_MODULE_7__);\n/* eslint-disable react-hooks/exhaustive-deps */\n\n\n\n\n\n\n\n\nconst labelLayerDisplayZoomLevel = 5;\nconst labelLayerScaleZoomLevel = 5;\nconst portLayerScaleZoomLevel = 5;\nconst portForecastStyle = new ol_style__WEBPACK_IMPORTED_MODULE_2__[\"Style\"]({\n  image: new ol_style__WEBPACK_IMPORTED_MODULE_2__[\"Icon\"]({\n    src: \"/icons/com_icons.png\",\n    size: [29, 29],\n    offset: [123, 12],\n    scale: 0.2\n  })\n});\nconst portNonForecastStyle = new ol_style__WEBPACK_IMPORTED_MODULE_2__[\"Style\"]({\n  image: new ol_style__WEBPACK_IMPORTED_MODULE_2__[\"Circle\"]({\n    radius: 2,\n    fill: new ol_style__WEBPACK_IMPORTED_MODULE_2__[\"Fill\"]({\n      color: [63, 144, 255]\n    })\n  })\n});\nconst labelStyle = new ol_style__WEBPACK_IMPORTED_MODULE_2__[\"Style\"]({\n  text: new ol_style__WEBPACK_IMPORTED_MODULE_2__[\"Text\"]({\n    textAlign: \"center\",\n    textBaseline: \"bottom\",\n    font: \"Bold 15px/3 arial\",\n    fill: new ol_style__WEBPACK_IMPORTED_MODULE_2__[\"Fill\"]({\n      color: \"white\"\n    }),\n    backgroundFill: new ol_style__WEBPACK_IMPORTED_MODULE_2__[\"Fill\"]({\n      color: [63, 144, 255]\n    }),\n    backgroundStroke: new ol_style__WEBPACK_IMPORTED_MODULE_2__[\"Stroke\"]({\n      color: \"white\"\n    }),\n    padding: [0, 5, 0, 5],\n    offsetY: -15\n  })\n});\nconst portLayer = new ol_layer_Vector__WEBPACK_IMPORTED_MODULE_4___default.a({\n  source: new ol_source_Vector__WEBPACK_IMPORTED_MODULE_1___default.a({\n    format: new ol_format_GeoJSON__WEBPACK_IMPORTED_MODULE_3___default.a()\n  })\n});\nconst labelLayer = new ol_layer_Vector__WEBPACK_IMPORTED_MODULE_4___default.a({\n  source: new ol_source_Vector__WEBPACK_IMPORTED_MODULE_1___default.a({\n    format: new ol_format_GeoJSON__WEBPACK_IMPORTED_MODULE_3___default.a()\n  })\n});\nconst layer = new ol_layer_Group__WEBPACK_IMPORTED_MODULE_5___default.a({\n  layers: [portLayer, labelLayer]\n});\n\nconst Index = ({\n  selectedPort,\n  portList,\n  guardianMap\n}) => {\n  const {\n    0: currentZoom,\n    1: setCurrentZoom\n  } = Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(guardianMap.getView().getZoom());\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(() => {\n    if (portList.length === 0) {\n      return;\n    }\n\n    const portSource = portLayer.getSource();\n    const labelSource = labelLayer.getSource();\n    const portDataFeatures = selectedPort ? portList.filter(({\n      properties: {\n        id\n      }\n    }) => id === selectedPort.id) : portList;\n    const labelDataFeatures = portDataFeatures.map(item => immer__WEBPACK_IMPORTED_MODULE_7___default()(item, draft => {\n      draft.properties.click_disabled = true;\n    }));\n    portSource.addFeatures(Object(core_model_Map__WEBPACK_IMPORTED_MODULE_6__[\"formatPortFeatures\"])(portDataFeatures));\n    labelSource.addFeatures(Object(core_model_Map__WEBPACK_IMPORTED_MODULE_6__[\"formatPortFeatures\"])(labelDataFeatures)); // eslint-disable-next-line consistent-return\n\n    return function clearUp() {\n      portSource.clear();\n      labelSource.clear();\n    };\n  }, [selectedPort, portList]);\n\n  const reStylesPortLayer = () => {\n    const source = portLayer.getSource();\n    const features = source.getFeatures();\n    features.map(feature => {\n      const zoom = guardianMap.getView().getZoom();\n      const scale = zoom > portLayerScaleZoomLevel ? 0.5 : 0.4;\n      const newPortForecastStyle = portForecastStyle.clone();\n      newPortForecastStyle.getImage().setScale(scale);\n      const newPortNonForecastStyle = portNonForecastStyle.clone();\n      return feature.setStyle(feature.get(\"has_port_forecast\") ? newPortForecastStyle : newPortNonForecastStyle);\n    });\n  };\n\n  const reStylesLabelLayer = () => {\n    const labelSource = labelLayer.getSource();\n    const features = labelSource.getFeatures();\n    features.map(feature => {\n      const zoom = guardianMap.getView().getZoom();\n      const scale = zoom > labelLayerScaleZoomLevel ? 0.4 : 0.2;\n      const newLabelStyle = labelStyle.clone();\n      const text = newLabelStyle.getText();\n      text.setText(zoom > labelLayerDisplayZoomLevel ? feature.getProperties().name : \"\");\n      text.setScale(scale * 1.5);\n      return feature.setStyle(newLabelStyle);\n    });\n  };\n\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(() => {\n    reStylesPortLayer();\n  }, [portList, guardianMap, reStylesPortLayer]);\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(() => {\n    reStylesLabelLayer();\n  }, [portList, guardianMap]);\n  guardianMap.on(\"moveend\", () => {\n    const zoom = guardianMap.getView().getZoom();\n\n    if (zoom > labelLayerDisplayZoomLevel && currentZoom < labelLayerDisplayZoomLevel || zoom < labelLayerDisplayZoomLevel && currentZoom > labelLayerDisplayZoomLevel) {\n      reStylesLabelLayer();\n    }\n\n    setCurrentZoom(zoom);\n  });\n  Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(() => {\n    guardianMap.addLayer(layer);\n  }, [guardianMap]);\n  return null;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Index);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/Layers/Port/index.tsx\n");

/***/ }),

/***/ "./src/core/model/Map/index.tsx":
/*!**************************************!*\
  !*** ./src/core/model/Map/index.tsx ***!
  \**************************************/
/*! exports provided: MapLayers, deg2Rad, CONVERT_PROJECTION, convertCoord2LongLat, convertLongLat2Coords, convertHeadingtoDegree, getHeadingRad, formatPortFeatures, formatVesselFeatures */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MapLayers\", function() { return MapLayers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deg2Rad\", function() { return deg2Rad; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CONVERT_PROJECTION\", function() { return CONVERT_PROJECTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"convertCoord2LongLat\", function() { return convertCoord2LongLat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"convertLongLat2Coords\", function() { return convertLongLat2Coords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"convertHeadingtoDegree\", function() { return convertHeadingtoDegree; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getHeadingRad\", function() { return getHeadingRad; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatPortFeatures\", function() { return formatPortFeatures; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatVesselFeatures\", function() { return formatVesselFeatures; });\n/* harmony import */ var lodash_round__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/round */ \"lodash/round\");\n/* harmony import */ var lodash_round__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_round__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ol_format_GeoJSON__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ol/format/GeoJSON */ \"ol/format/GeoJSON\");\n/* harmony import */ var ol_format_GeoJSON__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ol_format_GeoJSON__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nlet MapLayers;\n\n(function (MapLayers) {\n  MapLayers[\"Vessel\"] = \"vessel\";\n  MapLayers[\"Port\"] = \"port\";\n})(MapLayers || (MapLayers = {}));\n\nconst defaultGeojsonObject = {\n  type: \"FeatureCollection\",\n  crs: {\n    type: \"name\",\n    properties: {\n      name: \"EPSG:4326\"\n    }\n  }\n};\nfunction deg2Rad(_degree) {\n  const degree = Number(_degree);\n  return degree ? degree / 180 * Math.PI : 0;\n}\nconst CONVERT_PROJECTION = {\n  featureProjection: \"EPSG:3857\",\n  dataProjection: \"EPSG:4326\"\n};\nconst convertCoord2LongLat = data => {\n  return ol.proj.transform(data, \"EPSG:3857\", \"EPSG:4326\");\n};\nconst convertLongLat2Coords = data => {\n  return ol.proj.transform(data, \"EPSG:4326\", \"EPSG:3857\");\n};\nfunction convertHeadingtoDegree(heading, offset = Math.PI / 2) {\n  return lodash_round__WEBPACK_IMPORTED_MODULE_0___default()(heading * 180 / Math.PI + offset);\n}\nconst getHeadingRad = (_degree, offset = Math.PI / 2) => {\n  const degree = deg2Rad(_degree);\n  return degree - offset;\n};\nconst formatPortFeatures = features => {\n  const geoJson = _objectSpread(_objectSpread({}, defaultGeojsonObject), {}, {\n    features\n  });\n\n  return new ol_format_GeoJSON__WEBPACK_IMPORTED_MODULE_1___default.a(CONVERT_PROJECTION).readFeatures(geoJson);\n};\nconst formatVesselFeatures = dataFeatures => {\n  const features = dataFeatures.map(feature => ({\n    properties: feature.properties,\n    geometry: feature.geometry,\n    type: \"Feature\"\n  }));\n\n  const geoJson = _objectSpread(_objectSpread({}, defaultGeojsonObject), {}, {\n    features\n  });\n\n  return new ol_format_GeoJSON__WEBPACK_IMPORTED_MODULE_1___default.a(CONVERT_PROJECTION).readFeatures(geoJson);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29yZS9tb2RlbC9NYXAvaW5kZXgudHN4PzBlMTIiXSwibmFtZXMiOlsiTWFwTGF5ZXJzIiwiZGVmYXVsdEdlb2pzb25PYmplY3QiLCJ0eXBlIiwiY3JzIiwicHJvcGVydGllcyIsIm5hbWUiLCJkZWcyUmFkIiwiX2RlZ3JlZSIsImRlZ3JlZSIsIk51bWJlciIsIk1hdGgiLCJQSSIsIkNPTlZFUlRfUFJPSkVDVElPTiIsImZlYXR1cmVQcm9qZWN0aW9uIiwiZGF0YVByb2plY3Rpb24iLCJjb252ZXJ0Q29vcmQyTG9uZ0xhdCIsImRhdGEiLCJvbCIsInByb2oiLCJ0cmFuc2Zvcm0iLCJjb252ZXJ0TG9uZ0xhdDJDb29yZHMiLCJjb252ZXJ0SGVhZGluZ3RvRGVncmVlIiwiaGVhZGluZyIsIm9mZnNldCIsImdldEhlYWRpbmdSYWQiLCJmb3JtYXRQb3J0RmVhdHVyZXMiLCJmZWF0dXJlcyIsImdlb0pzb24iLCJHZW9KU09OIiwicmVhZEZlYXR1cmVzIiwiZm9ybWF0VmVzc2VsRmVhdHVyZXMiLCJkYXRhRmVhdHVyZXMiLCJtYXAiLCJmZWF0dXJlIiwiZ2VvbWV0cnkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQTtBQUdPLElBQUtBLFNBQVo7O1dBQVlBLFM7QUFBQUEsVztBQUFBQSxXO0dBQUFBLFMsS0FBQUEsUzs7QUFnQlosTUFBTUMsb0JBQW9CLEdBQUc7QUFDM0JDLE1BQUksRUFBRSxtQkFEcUI7QUFFM0JDLEtBQUcsRUFBRTtBQUNIRCxRQUFJLEVBQUUsTUFESDtBQUVIRSxjQUFVLEVBQUU7QUFDVkMsVUFBSSxFQUFFO0FBREk7QUFGVDtBQUZzQixDQUE3QjtBQVNPLFNBQVNDLE9BQVQsQ0FBaUJDLE9BQWpCLEVBQXVDO0FBQzVDLFFBQU1DLE1BQU0sR0FBR0MsTUFBTSxDQUFDRixPQUFELENBQXJCO0FBQ0EsU0FBT0MsTUFBTSxHQUFJQSxNQUFNLEdBQUcsR0FBVixHQUFpQkUsSUFBSSxDQUFDQyxFQUF6QixHQUE4QixDQUEzQztBQUNEO0FBRU0sTUFBTUMsa0JBQWtCLEdBQUc7QUFDaENDLG1CQUFpQixFQUFFLFdBRGE7QUFFaENDLGdCQUFjLEVBQUU7QUFGZ0IsQ0FBM0I7QUFLQSxNQUFNQyxvQkFBb0IsR0FBSUMsSUFBRCxJQUFvQjtBQUN0RCxTQUFPQyxFQUFFLENBQUNDLElBQUgsQ0FBUUMsU0FBUixDQUFrQkgsSUFBbEIsRUFBd0IsV0FBeEIsRUFBcUMsV0FBckMsQ0FBUDtBQUNELENBRk07QUFHQSxNQUFNSSxxQkFBcUIsR0FBSUosSUFBRCxJQUFvQjtBQUN2RCxTQUFPQyxFQUFFLENBQUNDLElBQUgsQ0FBUUMsU0FBUixDQUFrQkgsSUFBbEIsRUFBd0IsV0FBeEIsRUFBcUMsV0FBckMsQ0FBUDtBQUNELENBRk07QUFJQSxTQUFTSyxzQkFBVCxDQUFnQ0MsT0FBaEMsRUFBaURDLE1BQU0sR0FBR2IsSUFBSSxDQUFDQyxFQUFMLEdBQVUsQ0FBcEUsRUFBdUU7QUFDNUUsU0FBTyxvREFBT1csT0FBTyxHQUFHLEdBQVgsR0FBa0JaLElBQUksQ0FBQ0MsRUFBdkIsR0FBNEJZLE1BQWxDLENBQVA7QUFDRDtBQUVNLE1BQU1DLGFBQWEsR0FBRyxDQUFDakIsT0FBRCxFQUFlZ0IsTUFBTSxHQUFHYixJQUFJLENBQUNDLEVBQUwsR0FBVSxDQUFsQyxLQUFnRDtBQUMzRSxRQUFNSCxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0MsT0FBRCxDQUF0QjtBQUNBLFNBQU9DLE1BQU0sR0FBR2UsTUFBaEI7QUFDRCxDQUhNO0FBS0EsTUFBTUUsa0JBQWtCLEdBQUlDLFFBQUQsSUFBaUM7QUFDakUsUUFBTUMsT0FBTyxtQ0FBUTFCLG9CQUFSO0FBQThCeUI7QUFBOUIsSUFBYjs7QUFDQSxTQUFPLElBQUlFLHdEQUFKLENBQVloQixrQkFBWixFQUFnQ2lCLFlBQWhDLENBQTZDRixPQUE3QyxDQUFQO0FBQ0QsQ0FITTtBQUtBLE1BQU1HLG9CQUFvQixHQUFJQyxZQUFELElBQXFDO0FBQ3ZFLFFBQU1MLFFBQVEsR0FBR0ssWUFBWSxDQUFDQyxHQUFiLENBQWtCQyxPQUFELEtBQW1CO0FBQ25EN0IsY0FBVSxFQUFFNkIsT0FBTyxDQUFDN0IsVUFEK0I7QUFFbkQ4QixZQUFRLEVBQUVELE9BQU8sQ0FBQ0MsUUFGaUM7QUFHbkRoQyxRQUFJLEVBQUU7QUFINkMsR0FBbkIsQ0FBakIsQ0FBakI7O0FBS0EsUUFBTXlCLE9BQU8sbUNBQVExQixvQkFBUjtBQUE4QnlCO0FBQTlCLElBQWI7O0FBRUEsU0FBTyxJQUFJRSx3REFBSixDQUFZaEIsa0JBQVosRUFBZ0NpQixZQUFoQyxDQUE2Q0YsT0FBN0MsQ0FBUDtBQUNELENBVE0iLCJmaWxlIjoiLi9zcmMvY29yZS9tb2RlbC9NYXAvaW5kZXgudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHByb2R1Y2UgZnJvbSBcImltbWVyXCI7XG5pbXBvcnQgR2VvSlNPTiBmcm9tIFwib2wvZm9ybWF0L0dlb0pTT05cIjtcbmltcG9ydCB7IHJvdW5kIH0gZnJvbSBcImxvZGFzaFwiO1xuXG5leHBvcnQgZW51bSBNYXBMYXllcnMge1xuICBWZXNzZWwgPSBcInZlc3NlbFwiLFxuICBQb3J0ID0gXCJwb3J0XCIsXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgR2VvbWV0cnlQcm9maWxlIHtcbiAgdHlwZTogXCJQb2ludFwiIHwgc3RyaW5nO1xuICBjb29yZGluYXRlczogQXJyYXk8bnVtYmVyPjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBGZWF0dXJlc1Byb2ZpbGUge1xuICB0eXBlOiBcIkZlYXR1cmVcIjtcbiAgZ2VvbWV0cnk6IEdlb21ldHJ5UHJvZmlsZTtcbiAgcHJvcGVydGllcz86IGFueTtcbn1cblxuY29uc3QgZGVmYXVsdEdlb2pzb25PYmplY3QgPSB7XG4gIHR5cGU6IFwiRmVhdHVyZUNvbGxlY3Rpb25cIixcbiAgY3JzOiB7XG4gICAgdHlwZTogXCJuYW1lXCIsXG4gICAgcHJvcGVydGllczoge1xuICAgICAgbmFtZTogXCJFUFNHOjQzMjZcIixcbiAgICB9LFxuICB9LFxufTtcbmV4cG9ydCBmdW5jdGlvbiBkZWcyUmFkKF9kZWdyZWU6IGFueSk6IG51bWJlciB7XG4gIGNvbnN0IGRlZ3JlZSA9IE51bWJlcihfZGVncmVlKTtcbiAgcmV0dXJuIGRlZ3JlZSA/IChkZWdyZWUgLyAxODApICogTWF0aC5QSSA6IDA7XG59XG5cbmV4cG9ydCBjb25zdCBDT05WRVJUX1BST0pFQ1RJT04gPSB7XG4gIGZlYXR1cmVQcm9qZWN0aW9uOiBcIkVQU0c6Mzg1N1wiLFxuICBkYXRhUHJvamVjdGlvbjogXCJFUFNHOjQzMjZcIixcbn07XG5cbmV4cG9ydCBjb25zdCBjb252ZXJ0Q29vcmQyTG9uZ0xhdCA9IChkYXRhOiBudW1iZXJbXSkgPT4ge1xuICByZXR1cm4gb2wucHJvai50cmFuc2Zvcm0oZGF0YSwgXCJFUFNHOjM4NTdcIiwgXCJFUFNHOjQzMjZcIik7XG59O1xuZXhwb3J0IGNvbnN0IGNvbnZlcnRMb25nTGF0MkNvb3JkcyA9IChkYXRhOiBudW1iZXJbXSkgPT4ge1xuICByZXR1cm4gb2wucHJvai50cmFuc2Zvcm0oZGF0YSwgXCJFUFNHOjQzMjZcIiwgXCJFUFNHOjM4NTdcIik7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gY29udmVydEhlYWRpbmd0b0RlZ3JlZShoZWFkaW5nOiBudW1iZXIsIG9mZnNldCA9IE1hdGguUEkgLyAyKSB7XG4gIHJldHVybiByb3VuZCgoaGVhZGluZyAqIDE4MCkgLyBNYXRoLlBJICsgb2Zmc2V0KTtcbn1cblxuZXhwb3J0IGNvbnN0IGdldEhlYWRpbmdSYWQgPSAoX2RlZ3JlZTogYW55LCBvZmZzZXQgPSBNYXRoLlBJIC8gMik6IG51bWJlciA9PiB7XG4gIGNvbnN0IGRlZ3JlZSA9IGRlZzJSYWQoX2RlZ3JlZSk7XG4gIHJldHVybiBkZWdyZWUgLSBvZmZzZXQ7XG59O1xuXG5leHBvcnQgY29uc3QgZm9ybWF0UG9ydEZlYXR1cmVzID0gKGZlYXR1cmVzOiBGZWF0dXJlc1Byb2ZpbGVbXSkgPT4ge1xuICBjb25zdCBnZW9Kc29uID0geyAuLi5kZWZhdWx0R2VvanNvbk9iamVjdCwgZmVhdHVyZXMgfTtcbiAgcmV0dXJuIG5ldyBHZW9KU09OKENPTlZFUlRfUFJPSkVDVElPTikucmVhZEZlYXR1cmVzKGdlb0pzb24pO1xufTtcblxuZXhwb3J0IGNvbnN0IGZvcm1hdFZlc3NlbEZlYXR1cmVzID0gKGRhdGFGZWF0dXJlczogRmVhdHVyZXNQcm9maWxlW10pID0+IHtcbiAgY29uc3QgZmVhdHVyZXMgPSBkYXRhRmVhdHVyZXMubWFwKChmZWF0dXJlOiBhbnkpID0+ICh7XG4gICAgcHJvcGVydGllczogZmVhdHVyZS5wcm9wZXJ0aWVzLFxuICAgIGdlb21ldHJ5OiBmZWF0dXJlLmdlb21ldHJ5LFxuICAgIHR5cGU6IFwiRmVhdHVyZVwiLFxuICB9KSk7XG4gIGNvbnN0IGdlb0pzb24gPSB7IC4uLmRlZmF1bHRHZW9qc29uT2JqZWN0LCBmZWF0dXJlcyB9O1xuXG4gIHJldHVybiBuZXcgR2VvSlNPTihDT05WRVJUX1BST0pFQ1RJT04pLnJlYWRGZWF0dXJlcyhnZW9Kc29uKTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/model/Map/index.tsx\n");

/***/ })

};;